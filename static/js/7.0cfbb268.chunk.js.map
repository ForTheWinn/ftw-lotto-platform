{"version":3,"sources":["packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/import-privatekey/components/verify-privatekey/index.tsx"],"names":["VerifyPrivateKey","onVerify","useState","privateKey","setPrivateKey","error","setError","verifyPrivatekey","Neon","is","wif","className","htmlFor","id","placeholder","value","onChange","e","target","onKeyDown","keyCode","message","onClose","onClick","disabled"],"mappings":"0LAoDeA,UA5CU,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAsC,EAC5BC,mBAAS,IADmB,mBACzDC,EADyD,KAC7CC,EAD6C,OAEtCF,mBAAS,IAF6B,mBAEzDG,EAFyD,KAElDC,EAFkD,KAG1DC,EAAmB,WACnBJ,IACEK,IAAKC,GAAGN,WAAWA,IAAeK,IAAKC,GAAGC,IAAIP,GAChDF,EAASE,GAETG,EAAS,4DAKf,OACE,oCACE,yBAAKK,UAAU,SACb,2BAAOC,QAAQ,aAAaD,UAAU,SAAtC,eAGA,2BACEE,GAAG,aACHF,UAAU,QACVG,YAAY,cACZC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAca,EAAEC,OAAOH,QACtCI,UAAW,SAAAF,GACS,KAAdA,EAAEG,SAAkBjB,GACtBI,QAKPF,GAAS,kBAAC,UAAD,CAAcgB,QAAShB,EAAOiB,QAAS,kBAAMhB,EAAS,OAChE,4BACEiB,QAAShB,EACTiB,UAAWrB,EACXQ,UAAS,qBAHX","file":"static/js/7.0cfbb268.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Neon from \"@cityofzion/neon-js\";\nimport DisplayError from \"../../../../components/display-error\";\n\ninterface VerifyPrivateKeyProps {\n  onVerify: (privateKey: string) => void;\n}\n\nconst VerifyPrivateKey = ({ onVerify }: VerifyPrivateKeyProps) => {\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const verifyPrivatekey = () => {\n    if (privateKey) {\n      if (Neon.is.privateKey(privateKey) || Neon.is.wif(privateKey)) {\n        onVerify(privateKey);\n      } else {\n        setError(\"Please check your private key. It it not a valid type.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"field\">\n        <label htmlFor=\"privatekey\" className=\"label\">\n          Private key\n        </label>\n        <input\n          id=\"privatekey\"\n          className=\"input\"\n          placeholder=\"Private Key\"\n          value={privateKey}\n          onChange={e => setPrivateKey(e.target.value)}\n          onKeyDown={e => {\n            if (e.keyCode === 13 && privateKey) {\n              verifyPrivatekey();\n            }\n          }}\n        />\n      </div>\n      {error && <DisplayError message={error} onClose={() => setError(\"\")} />}\n      <button\n        onClick={verifyPrivatekey}\n        disabled={!privateKey}\n        className={`button is-primary`}\n      >\n        Verify your private key\n      </button>\n    </>\n  );\n};\n\nexport default VerifyPrivateKey;\n"],"sourceRoot":""}