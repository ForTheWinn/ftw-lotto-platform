{"version":3,"sources":["packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/import-file/components/import-button/index.tsx"],"names":["ImportButton","onImport","useState","error","setError","message","onClose","className","onChange","e","target","files","length","reader","FileReader","onload","event","jsonObj","JSON","parse","result","accounts","wallets","map","acc","address","encryptedKey","key","readAsText","type","accept"],"mappings":"0KAsEeA,UAhDM,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAkC,EAC9BC,mBAAS,IADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KA4BxD,OACE,oCACGD,GAAS,kBAAC,UAAD,CAAcE,QAASF,EAAOG,QAAS,kBAAMF,EAAS,OAChE,yBAAKG,UAAU,QACb,2BAAOA,UAAU,cACf,2BACEC,SAhCW,SAACC,GACpB,GAAIA,EAAEC,OAAOC,OAASF,EAAEC,OAAOC,MAAMC,OACnC,IAEE,IAAMC,EAAS,IAAIC,WAgBnB,OAfAD,EAAOE,OAAS,SAACC,GACf,IAAMC,EAAUC,KAAKC,MAAMH,EAAMN,OAAOU,QACxC,GAAIH,EAAQI,UAAYJ,EAAQI,SAAST,OAAQ,CAC/C,IAAMU,EAAUL,EAAQI,SAASE,KAAI,SAACC,GACpC,MAAO,CACLC,QAASD,EAAIC,QACbC,aAAcF,EAAIG,QAGtB1B,EAASqB,QAETlB,EAAS,oCAGbS,EAAOe,WAAWnB,EAAEC,OAAOC,MAAM,KAC1B,EACP,MAAOF,GACPL,EAASK,EAAEJ,WAWPE,UAAU,aACVsB,KAAK,OACLC,OAAO,2BAET,0BAAMvB,UAAU,8BACd,0BAAMA,UAAU,cAAhB","file":"static/js/5.f38c5c10.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport DisplayError from \"../../../../components/display-error\";\n\ninterface WalletProps {\n  encryptedKey: string;\n  address: string;\n}\n\ninterface Nep6 {\n  address: string;\n  label: string;\n  isDefault: boolean;\n  lock: boolean;\n  key: string;\n  contract: {};\n  \"extra?\": boolean;\n}\n\ninterface ImportButtonProps {\n  onImport: (wallets: WalletProps[]) => void;\n}\n\nconst ImportButton = ({ onImport }: ImportButtonProps) => {\n  const [error, setError] = useState(\"\");\n  const handleImport = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length) {\n      try {\n        // eslint-disable-next-line no-undef\n        const reader = new FileReader();\n        reader.onload = (event: any) => {\n          const jsonObj = JSON.parse(event.target.result);\n          if (jsonObj.accounts && jsonObj.accounts.length) {\n            const wallets = jsonObj.accounts.map((acc: Nep6) => {\n              return {\n                address: acc.address,\n                encryptedKey: acc.key,\n              };\n            });\n            onImport(wallets);\n          } else {\n            setError(\"Cannot find account in the file\");\n          }\n        };\n        reader.readAsText(e.target.files[0]);\n        return false;\n      } catch (e) {\n        setError(e.message);\n      }\n    }\n  };\n  return (\n    <>\n      {error && <DisplayError message={error} onClose={() => setError(\"\")} />}\n      <div className=\"file\">\n        <label className=\"file-label\">\n          <input\n            onChange={handleImport}\n            className=\"file-input\"\n            type=\"file\"\n            accept=\".json,application/json\"\n          />\n          <span className=\"file-cta button is-primary\">\n            <span className=\"file-label\">Select wallet file</span>\n          </span>\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default ImportButton;\n"],"sourceRoot":""}