{"version":3,"sources":["packages/wallet/scenes/wallet/components/wallets/nep2-wallet lazy /^.*$/ groupOptions: {} namespace object","packages/wallet/scenes/invoke/consts.ts","packages/wallet/scenes/invoke/components/network-fee/index.tsx","packages/wallet/scenes/invoke/components/collapse/index.tsx","packages/wallet/scenes/invoke/components/txid/clipboard-button/index.tsx","packages/wallet/scenes/invoke/components/txid/index.tsx","packages/wallet/actions.ts","packages/wallet/context-types.ts","packages/wallet/scenes/invoke/index.tsx","packages/wallet/scenes/components/modal-wrapper/index.tsx","packages/wallet/scenes/wallet/components/wallet-list/index.tsx","packages/wallet/scenes/wallet/components/wallets/providers/index.tsx","packages/wallet/scenes/wallet/index.tsx","packages/wallet/reducer.ts","packages/wallet/index.tsx","packages/ftw/nlp3/consts.ts","packages/ftw/nlp3/helpers.ts","scenes/builder/scenes/odds/components/display-odds/index.tsx","scenes/builder/components/Title.tsx","scenes/builder/scenes/odds/index.tsx","scenes/builder/scenes/frequency/index.tsx","scenes/builder/scenes/ticket-price/components/display-fee-structure/index.tsx","scenes/builder/scenes/ticket-price/index.tsx","scenes/builder/scenes/prize-structure/components/display-prize-structure/index.tsx","scenes/builder/scenes/prize-structure/index.tsx","components/display-game-rules/index.tsx","scenes/builder/scenes/confirm/index.tsx","packages/ftw/helpers.ts","packages/ftw/nlp3/parsers.ts","packages/ftw/nlp3/actions.ts","packages/ftw/nlp3/index.ts","packages/ftw/neo/index.ts","packages/ftw/index.tsx","scenes/game/components/page-error/index.tsx","scenes/builder/index.tsx","components/page-error/index.tsx","components/with-pagination/index.tsx","scenes/home/components/game-list/index.tsx","components/header/components/display-current-wallet/index.tsx","components/header/index.tsx","scenes/home/index.tsx","scenes/game/components/number-picker/components/choose-numbers/components/ball/index.tsx","scenes/game/components/number-picker/components/choose-numbers/index.tsx","scenes/game/components/number-picker/components/display-selected-numbers/components/ball/index.tsx","scenes/game/components/number-picker/components/display-selected-numbers/index.tsx","scenes/game/components/number-picker/reducer.ts","scenes/game/components/number-picker/types.ts","scenes/game/components/number-picker/components/autopic-button/index.tsx","scenes/game/components/number-picker/index.tsx","scenes/game/components/card/index.tsx","scenes/game/scenes/play/index.tsx","scenes/game/components/with-pagination/index.tsx","scenes/game/components/with-detail/index.tsx","scenes/game/scenes/results/index.tsx","scenes/game/scenes/results/components/List.tsx","scenes/game/scenes/results/components/Detail.tsx","scenes/game/scenes/maintain/components/draw/index.tsx","scenes/game/scenes/maintain/components/verify/index.tsx","scenes/game/scenes/maintain/index.tsx","scenes/game/scenes/about/index.tsx","scenes/game/scenes/entries/components/ticket-detail/index.tsx","scenes/game/scenes/entries/scenes/all-tickets/index.tsx","scenes/game/scenes/entries/scenes/all-tickets/list.tsx","scenes/game/scenes/entries/scenes/winners/index.tsx","scenes/game/scenes/entries/scenes/winners/list.tsx","scenes/game/scenes/entries/index.tsx","scenes/game/scenes/transactions/index.tsx","scenes/game/scenes/routes.ts","scenes/game/components/display-wallet/index.tsx","scenes/game/components/nav/index.tsx","scenes/game/components/header/index.tsx","scenes/game/scenes/index.tsx","scenes/game/index.tsx","scenes/create/index.tsx","scenes/builder/scenes/submitted/index.tsx","scenes/content.tsx","scenes/index.tsx","serviceWorker.ts","index.tsx","packages/wallet/api/local-storage/index.ts","packages/wallet/api/providers/o3.ts","packages/wallet/api/helpers.ts","packages/wallet/api/providers/nos.ts","packages/wallet/api/providers/local.ts","packages/wallet/api/providers/line.ts","packages/wallet/api/index.ts","packages/wallet/api/providers/index.ts","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/routes.ts","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/components/display-error/index.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/components/password-input/index.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/index.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/components/nav/index.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/unlock-nep2/index.tsx","packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/unlock-nep2/components/form.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","NETWORK_FEE","NetworkFee","value","setValue","className","fee","label","type","key","onClick","ReviewInvokeScript","invokeScript","trigger","style","alignItems","lazyRender","padding","scriptHash","operation","args","s","i","ClipboardButton","useState","isCopied","setCopy","data-clipboard-text","DisplayTxid","txid","marginBottom","marginRight","connectWallet","wallet","WalletAPI","localStorage","setWallet","payload","currentWallet","submitInvoke","script","networkFee","network","a","providers","provider","doInvoke","message","Invoker","onConnected","isSubmitting","values","setValues","isRequiredPrivateKey","privateKey","invokeResult","val","error","undefined","addTransaction","getHistory","push","catch","Modal","onClose","children","React","useEffect","$","addClass","removeClass","aria-label","walletRoutes","path","WalletList","route","to","memo","setAccount","setError","isLoading","setLoading","getAccount","account","justifyContent","Wallet","console","log","initialEntries","exact","component","match","params","DisplayConnectedMessage","reducer","state","action","isWalletActive","isInvokerActive","WalletContext","createContext","WalletProvider","props","initialState","getWallet","useReducer","dispatch","actions","openWallet","closeWallet","openInvoker","toast","closeInvoker","disconnectWallet","removeWallet","store","useMemo","Provider","NLP3_CONTRACT_HASH","FETCH_METHODS","game","entry","result","winner","calculateOdds","number","range","chances","_","odds","j","factorial","formatFrequency","seconds","h","Math","floor","moment","duration","asHours","m","minutes","DisplayOdds","numbers","rangeNumbers","Title","text","withFormik","validateOnBlur","validateOnChange","validationSchema","Yup","shape","totalBalls","required","mapPropsToValues","handleSubmit","onSubmit","nextStep","displayName","setFieldValue","errors","touched","name","thousandSeparator","allowNegative","isAllowed","formattedValue","floatValue","onValueChange","frequency","min","previousStep","DisplayFeeStructure","ticketPrice","DRAW_REWARD_PERCENTAGE","WrappedComponent","max","DisplayPrizeStructure","prizes","prize","length","PrizeStructure","initPrizes","setPrizes","totalPercentage","forEach","decimalScale","newPrizes","prizeStructure","DisplayGameRules","initialDeposit","ConfirmCreateLotto","deposit","setDeposit","isConfirmed","setConfirmed","toLocaleString","handleInvoke","deserializeValue","str","sc","StackItem","deserialize","convertNumber","parseInt","u","isHex","reverseHex","convertAddress","getAddressFromScriptHash","convertIntToHexstring","num","size","num2hexstring","parseGame","byteArray","data","gameNo","owner","fixed82num","createdAt","status","stack","assets","FTX","totalGames","gameStatus","settings","gameHeight","ticketHeight","verificationHeight","winnerHeight","currentJackpot","nextDrawingAt","availableLotteryVerifyCount","claimCount","lotteryNo","ticketNo","player","item","isVerified","matched","hasPrize","verifiedAt","verifiedBy","isClaimed","reward","claimedAt","claimedBy","drawNo","winningNumbers","lastEntryNo","caster","casterReward","totalSales","jackpot","winners","totalTickets","totalVerifiedTickets","methods","create","ownerAddress","num2fixed8","buy","walletAddress","draw","verify","claim","withdraw","fundType","amount","FTW","getGames","currentPage","pageSize","totalItems","fetchData","rpcEndpoint","contractScriptHash","requestMethod","games","items","Parsers","getEntries","entries","getWinners","getResults","address","addressHash","getScriptHashFromAddress","sb","Neon","scriptBuilder","emitAppCall","parseFloat","getRpcNode","rpc","Query","execute","sort","totalPages","ceil","start","stop","skip","contractHash","getInvokeScript","getFetchMethod","getParser","FTWContext","FTWProvider","setData","getStatus","res","finally","timer","TaskTimer","on","tickCount","reset","PageLoadError","LottoBuilder","currentBalance","step","setStep","useContext","currentStep","overflow","onStepChange","activeStep","Header","current","Step","BuilderContainer","WithPagination","load","setCurrentPage","setTotalItems","setItems","childrenWithExtraProp","Children","child","cloneElement","count","pages","onChange","page","GameList","frequencyFormat","data-label","target","href","DisplayCurrentWallet","wordBreak","isMenuActive","setMenuActive","isScrollTop","setScrollTop","document","addEventListener","isTop","window","scrollY","onScroll","src","process","alt","role","tabIndex","activeClassName","Home","Ball","no","isActive","width","height","display","borderRadius","margin","classNames","ChooseNumbers","maxNumber","selectedNumbers","includes","SvgBackground","xmlns","cx","cy","r","d","Component","svgString","encodeURIComponent","renderToStaticMarkup","ballWrapper","boxShadow","backgroundImage","backgroundSize","DisplayNumbers","selectedNo","filter","index","forceNumber","AutopickButtons","onPick","onReset","hasNumber","NumberPicker","onBuy","indexOf","removeNumber","addNumber","randomNumbers","sample","n","samples","union","disabled","LotteryCard","date","renderer","hours","completed","Play","withDetail","ListComponent","DetailComponent","onOpen","setState","this","PureComponent","ResultList","WithDetail","join","unix","format","colSpan","round","Results","Draw","totalTicketsToBeVerified","hasEntries","onDraw","drawAt","isAfter","VerifyTicketProps","Maintain","lastGameResult","setLastGameResult","About","category","TicketDetail","walletContext","onClaim","TicketList","Detail","AllEntries","Winners","Nav","baseUrl","Entries","location","pathname","Transactions","getTransactions","txList","setList","confirm","clearTransaction","node","routes","DisplayWallet","withRouter","isSidebarActive","setSidebarStatus","zIndex","navStyle","showNav","onHideNav","App","Create","backgroundColor","maxHeight","Submitted","Content","Game","position","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","getList","has","get","LocalWallet","newWallet","encryptedKey","set","savedWallets","remove","getPrivateKey","password","decrypt","transaction","list","removeTransaction","o3dapi","initPlugins","o3dapiNeo","O3","o3Script","NEO","invoke","nodeUrl","description","parseScriptParams","arg","str2hexstring","toString","NOS","nos","V1","encodeArgs","getAddress","Local","api","neoscan","instance","getRPCEndpoint","getBalance","balance","NeonWallet","Account","config","url","fees","response","LINE","neoline","NEOLine","Init","LOCAL","DisplayError","PasswordInput","onKeyDown","showPassword","setVisible","keyCode","placeholder","pointerEvents","NEP2Wallet","hasStoredWallets","minHeight","lazy","fallback","UnlockNep2","validate","is","setSubmitting","setStatus","encrypted","Form","submitForm","isValidSubmit"],"mappings":"8KAAA,IAAIA,EAAM,CACT,IAAK,CACJ,IAED,KAAM,CACL,IAED,6BAA8B,CAC7B,IAED,8BAA+B,CAC9B,IAED,mCAAoC,CACnC,IAED,uCAAwC,CACvC,IAED,mBAAoB,CACnB,IAED,oBAAqB,CACpB,IAED,yBAA0B,CACzB,IAED,6BAA8B,CAC7B,IAED,8BAA+B,CAC9B,IAED,+BAAgC,CAC/B,IAED,oCAAqC,CACpC,IAED,wCAAyC,CACxC,IAED,UAAW,CACV,IAED,cAAe,CACd,IAED,WAAY,CACX,IAED,cAAe,CACd,IAED,yBAA0B,CACzB,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,2CAA4C,CAC3C,IACA,GAED,+CAAgD,CAC/C,IACA,GAED,yCAA0C,CACzC,IACA,GAED,6CAA8C,CAC7C,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,mCAAoC,CACnC,IACA,GAED,uBAAwB,CACvB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,gDAAiD,CAChD,IACA,GAED,iDAAkD,CACjD,IACA,GAED,sDAAuD,CACtD,IACA,GAED,0DAA2D,CAC1D,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,iCAAkC,CACjC,IACA,GAED,uBAAwB,CACvB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,uCAAwC,CACvC,IACA,IAED,2CAA4C,CAC3C,IACA,IAED,6BAA8B,CAC7B,IACA,GAED,iCAAkC,CACjC,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,2DAA4D,CAC3D,IACA,GAED,4DAA6D,CAC5D,IACA,GAED,iEAAkE,CACjE,IACA,GAED,qEAAsE,CACrE,IACA,GAED,0DAA2D,CAC1D,IACA,GAED,2DAA4D,CAC3D,IACA,GAED,gEAAiE,CAChE,IACA,GAED,oEAAqE,CACpE,IACA,GAED,mCAAoC,CACnC,IACA,GAED,uCAAwC,CACvC,IACA,GAED,yBAA0B,CACzB,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,yCAA0C,CACzC,IACA,IAED,6CAA8C,CAC7C,IACA,IAE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","file":"static/js/main.ebd38fc7.chunk.js","sourcesContent":["var map = {\n\t\".\": [\n\t\t57\n\t],\n\t\"./\": [\n\t\t57\n\t],\n\t\"./components/display-error\": [\n\t\t54\n\t],\n\t\"./components/display-error/\": [\n\t\t54\n\t],\n\t\"./components/display-error/index\": [\n\t\t54\n\t],\n\t\"./components/display-error/index.tsx\": [\n\t\t54\n\t],\n\t\"./components/nav\": [\n\t\t58\n\t],\n\t\"./components/nav/\": [\n\t\t58\n\t],\n\t\"./components/nav/index\": [\n\t\t58\n\t],\n\t\"./components/nav/index.tsx\": [\n\t\t58\n\t],\n\t\"./components/password-input\": [\n\t\t55\n\t],\n\t\"./components/password-input/\": [\n\t\t55\n\t],\n\t\"./components/password-input/index\": [\n\t\t55\n\t],\n\t\"./components/password-input/index.tsx\": [\n\t\t55\n\t],\n\t\"./index\": [\n\t\t57\n\t],\n\t\"./index.tsx\": [\n\t\t57\n\t],\n\t\"./routes\": [\n\t\t50\n\t],\n\t\"./routes.ts\": [\n\t\t50\n\t],\n\t\"./scenes/create-wallet\": [\n\t\t109,\n\t\t2\n\t],\n\t\"./scenes/create-wallet/\": [\n\t\t109,\n\t\t2\n\t],\n\t\"./scenes/create-wallet/components/backup\": [\n\t\t159,\n\t\t9\n\t],\n\t\"./scenes/create-wallet/components/backup.tsx\": [\n\t\t159,\n\t\t9\n\t],\n\t\"./scenes/create-wallet/components/form\": [\n\t\t161,\n\t\t8\n\t],\n\t\"./scenes/create-wallet/components/form.tsx\": [\n\t\t161,\n\t\t8\n\t],\n\t\"./scenes/create-wallet/index\": [\n\t\t109,\n\t\t2\n\t],\n\t\"./scenes/create-wallet/index.tsx\": [\n\t\t109,\n\t\t2\n\t],\n\t\"./scenes/import-file\": [\n\t\t110,\n\t\t1\n\t],\n\t\"./scenes/import-file/\": [\n\t\t110,\n\t\t1\n\t],\n\t\"./scenes/import-file/components/import-button\": [\n\t\t105,\n\t\t5\n\t],\n\t\"./scenes/import-file/components/import-button/\": [\n\t\t105,\n\t\t5\n\t],\n\t\"./scenes/import-file/components/import-button/index\": [\n\t\t105,\n\t\t5\n\t],\n\t\"./scenes/import-file/components/import-button/index.tsx\": [\n\t\t105,\n\t\t5\n\t],\n\t\"./scenes/import-file/index\": [\n\t\t110,\n\t\t1\n\t],\n\t\"./scenes/import-file/index.tsx\": [\n\t\t110,\n\t\t1\n\t],\n\t\"./scenes/import-nep2\": [\n\t\t111,\n\t\t3\n\t],\n\t\"./scenes/import-nep2/\": [\n\t\t111,\n\t\t3\n\t],\n\t\"./scenes/import-nep2/components/form\": [\n\t\t162,\n\t\t10\n\t],\n\t\"./scenes/import-nep2/components/form.tsx\": [\n\t\t162,\n\t\t10\n\t],\n\t\"./scenes/import-nep2/index\": [\n\t\t111,\n\t\t3\n\t],\n\t\"./scenes/import-nep2/index.tsx\": [\n\t\t111,\n\t\t3\n\t],\n\t\"./scenes/import-privatekey\": [\n\t\t112,\n\t\t0\n\t],\n\t\"./scenes/import-privatekey/\": [\n\t\t112,\n\t\t0\n\t],\n\t\"./scenes/import-privatekey/components/encrypt-privatekey\": [\n\t\t107,\n\t\t6\n\t],\n\t\"./scenes/import-privatekey/components/encrypt-privatekey/\": [\n\t\t107,\n\t\t6\n\t],\n\t\"./scenes/import-privatekey/components/encrypt-privatekey/index\": [\n\t\t107,\n\t\t6\n\t],\n\t\"./scenes/import-privatekey/components/encrypt-privatekey/index.tsx\": [\n\t\t107,\n\t\t6\n\t],\n\t\"./scenes/import-privatekey/components/verify-privatekey\": [\n\t\t108,\n\t\t7\n\t],\n\t\"./scenes/import-privatekey/components/verify-privatekey/\": [\n\t\t108,\n\t\t7\n\t],\n\t\"./scenes/import-privatekey/components/verify-privatekey/index\": [\n\t\t108,\n\t\t7\n\t],\n\t\"./scenes/import-privatekey/components/verify-privatekey/index.tsx\": [\n\t\t108,\n\t\t7\n\t],\n\t\"./scenes/import-privatekey/index\": [\n\t\t112,\n\t\t0\n\t],\n\t\"./scenes/import-privatekey/index.tsx\": [\n\t\t112,\n\t\t0\n\t],\n\t\"./scenes/saved-wallets\": [\n\t\t106,\n\t\t4\n\t],\n\t\"./scenes/saved-wallets/\": [\n\t\t106,\n\t\t4\n\t],\n\t\"./scenes/saved-wallets/components/form\": [\n\t\t160,\n\t\t11\n\t],\n\t\"./scenes/saved-wallets/components/form.tsx\": [\n\t\t160,\n\t\t11\n\t],\n\t\"./scenes/saved-wallets/index\": [\n\t\t106,\n\t\t4\n\t],\n\t\"./scenes/saved-wallets/index.tsx\": [\n\t\t106,\n\t\t4\n\t],\n\t\"./scenes/unlock-nep2\": [\n\t\t59\n\t],\n\t\"./scenes/unlock-nep2/\": [\n\t\t59\n\t],\n\t\"./scenes/unlock-nep2/components/form\": [\n\t\t87\n\t],\n\t\"./scenes/unlock-nep2/components/form.tsx\": [\n\t\t87\n\t],\n\t\"./scenes/unlock-nep2/index\": [\n\t\t59\n\t],\n\t\"./scenes/unlock-nep2/index.tsx\": [\n\t\t59\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 219;\nmodule.exports = webpackAsyncContext;","export const NETWORK_FEE: string[] = [\"0\", \"0.001\"];\n","import React from \"react\";\nimport { NETWORK_FEE } from \"../../consts\";\ninterface NetworkFeeProps {\n  value: string;\n  setValue: (value: string) => void;\n}\n\nconst NetworkFee = ({ value, setValue }: NetworkFeeProps) => {\n  return (\n    <>\n      <h6 className=\"title is-6\">Network fee</h6>\n      <div className=\"buttons has-addons\">\n        {NETWORK_FEE.map(fee => {\n          let label = \"\";\n\n          switch (fee) {\n            case \"0\":\n              label = \"Free\";\n              break;\n            case \"0.001\":\n              label = \"0.001 GAS\";\n              break;\n          }\n\n          return (\n            <button\n              type=\"button\"\n              key={label}\n              onClick={() => setValue(fee)}\n              className={\n                fee === value\n                  ? \"button is-active is-primary is-small\"\n                  : \"button is-small\"\n              }\n            >\n              {`${label}`}\n            </button>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default NetworkFee;\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { InvokeScript } from \"../../../../types\";\ninterface ReviewInvokeScriptProps {\n  invokeScript: InvokeScript;\n}\n\nconst ReviewInvokeScript = ({ invokeScript }: ReviewInvokeScriptProps) => {\n  return (\n    <div>\n      <Collapsible\n        trigger={\n          <div\n            className=\"is-size-6 is-flex has-text-grey-dark is-flex\"\n            style={{ alignItems: \"center\" }}\n          >\n            <span className=\"icon\">\n              <FaAngleDown />\n            </span>\n            <div>Show transaction details</div>\n          </div>\n        }\n        lazyRender={true}\n      >\n        <p style={{ padding: \"10px\" }} className=\"content is-small\">\n          Contract: {invokeScript.scriptHash}\n          <br />\n          Operation: {invokeScript.operation}\n          <br />\n          Args: <br />\n          {invokeScript.args.map((s, i) => (\n            <span key={`arg-${i}`}>\n              {s.value}\n              <br />\n            </span>\n          ))}\n        </p>\n      </Collapsible>\n    </div>\n  );\n};\n\nexport default ReviewInvokeScript;\n","import React, { useState } from \"react\";\n// @ts-ignore\nimport Clipboard from \"react-clipboard.js\";\n\ninterface ClipboardButtonProps {\n  value: string;\n}\n\nconst ClipboardButton = ({ value }: ClipboardButtonProps) => {\n  const [isCopied, setCopy] = useState(false);\n  return (\n    <Clipboard\n      onClick={() => setCopy(true)}\n      className={\"button is-primary\"}\n      data-clipboard-text={value}\n    >\n      {isCopied ? `Copied` : `Copy transaction`}\n    </Clipboard>\n  );\n};\n\nexport default ClipboardButton;\n","import React from \"react\";\nimport { FaCheck } from \"react-icons/fa\";\nimport ClipboardButton from \"./clipboard-button\";\n\ninterface DisplayTxidProps {\n  txid: string;\n}\n\nconst DisplayTxid = ({ txid }: DisplayTxidProps) => {\n  return (\n    <div>\n      <div>\n        <div className=\"has-text-centered\" style={{ marginBottom: \"24px\" }}>\n          <FaCheck className=\"has-text-primary is-size-1\" />\n          <br />\n          <p>Your transaction has been sent</p>\n        </div>\n        <hr />\n        <div className=\"content\">\n          <div className=\"is-flex\" style={{ alignItems: \"center\" }}>\n            <h6\n              className=\"title is-6 is-marginless\"\n              style={{ marginRight: \"5px\" }}\n            >\n              Transaction id\n            </h6>\n          </div>\n          <p>{txid}</p>\n        </div>\n        <ClipboardButton value={txid} />\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayTxid;\n","import Neon from \"@cityofzion/neon-js\";\nimport {\n  CLOSE_INVOKER,\n  CLOSE_WALLET,\n  CloseInvokerAction,\n  CloseWalletAction,\n  CONNECT_WALLET,\n  ConnectWalletAction,\n  DISCONNECT_WALLET,\n  DisconnectWalletAction,\n  OPEN_INVOKER,\n  OPEN_WALLET,\n  OpenInvokerAction,\n  OpenWalletAction,\n} from \"./context-types\";\nimport { CurrentWalletProps, InvokeResult, InvokeScript } from \"./types\";\nimport { WalletAPI } from \"./api\";\n\nexport const openInvoker = (invokeScript: InvokeScript): OpenInvokerAction => {\n  return {\n    type: OPEN_INVOKER,\n    payload: {\n      invokeScript,\n    },\n  };\n};\n\nexport const closeInvoker = (): CloseInvokerAction => {\n  return {\n    type: CLOSE_INVOKER,\n  };\n};\n\nexport const openWallet = (): OpenWalletAction => {\n  return {\n    type: OPEN_WALLET,\n  };\n};\n\nexport const closeWallet = (): CloseWalletAction => {\n  return {\n    type: CLOSE_WALLET,\n  };\n};\n\nexport const connectWallet = (\n  wallet: CurrentWalletProps\n): ConnectWalletAction => {\n  WalletAPI.localStorage.setWallet(wallet);\n  return {\n    type: CONNECT_WALLET,\n    payload: {\n      currentWallet: wallet,\n    },\n  };\n};\n\nexport const disconnectWallet = (): DisconnectWalletAction => {\n  WalletAPI.localStorage.removeWallet();\n  return {\n    type: DISCONNECT_WALLET,\n  };\n};\n\nexport const submitInvoke = async (\n  wallet: CurrentWalletProps,\n  script: InvokeScript,\n  networkFee: string,\n  network: string\n): Promise<InvokeResult> => {\n  try {\n    return await WalletAPI.providers[wallet.provider].doInvoke({\n      wallet,\n      script,\n      networkFee,\n      network,\n    });\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\n\nexport const getPrivateKey = async (encryptedKey: string, password: string) => {\n  try {\n    const account = await Neon.create.account(encryptedKey).decrypt(password);\n    return account.privateKey;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\n","import { CurrentWalletProps, InvokeScript, StoredWalletProps } from \"./types\";\n\nexport const OPEN_WALLET = \"OPEN_WALLET\";\nexport const CLOSE_WALLET = \"CLOSE_WALLET\";\nexport const OPEN_INVOKER = \"OPEN_INVOKER\";\nexport const CLOSE_INVOKER = \"CLOSE_INVOKER\";\nexport const CONNECT_WALLET = \"CONNECT_WALLET\";\nexport const DISCONNECT_WALLET = \"DISCONNECT_WALLET\";\n\nexport interface WalletContextProps {\n  state: WalletContextState;\n  dispatch: {\n    openWallet: () => void;\n    closeWallet: () => void;\n    openInvoker: (invokeScript: InvokeScript) => void;\n    closeInvoker: () => void;\n    connectWallet: (wallet: CurrentWalletProps) => void;\n    disconnectWallet: () => void;\n  };\n}\n\nexport interface WalletContextState {\n  network: string;\n  isInvokerActive: boolean;\n  isWalletActive: boolean;\n  currentWallet?: CurrentWalletProps;\n  invokeScript?: InvokeScript;\n}\n\nexport interface OpenInvokerAction {\n  type: typeof OPEN_INVOKER;\n  payload: {\n    invokeScript?: InvokeScript;\n  };\n}\n\nexport interface CloseInvokerAction {\n  type: typeof CLOSE_INVOKER;\n}\n\nexport interface OpenWalletAction {\n  type: typeof OPEN_WALLET;\n}\n\nexport interface CloseWalletAction {\n  type: typeof CLOSE_WALLET;\n}\n\nexport interface ConnectWalletAction {\n  type: typeof CONNECT_WALLET;\n  payload: {\n    currentWallet: CurrentWalletProps;\n  };\n}\n\nexport interface DisconnectWalletAction {\n  type: typeof DISCONNECT_WALLET;\n}\n","import React, { useState } from \"react\";\nimport getHistory from \"react-router-global-history\";\n\nimport NetworkFee from \"./components/network-fee\";\nimport ReviewInvokeScript from \"./components/collapse\";\nimport DisplayTxid from \"./components/txid\";\n\nimport { submitInvoke } from \"../../actions\";\nimport { NETWORK_FEE } from \"./consts\";\n\nimport { CurrentWalletProps, InvokeResult, InvokeScript } from \"../../types\";\nimport { WalletAPI, Wallet } from \"../../index\";\n\ninterface InvokerProps {\n  network: string;\n  currentWallet: CurrentWalletProps;\n  invokeScript: InvokeScript;\n  onConnected: (wallet: CurrentWalletProps) => void;\n}\n\ninterface InvokerState {\n  invokeResult?: InvokeResult;\n  networkFee: string;\n  isSubmitting: boolean;\n  error?: string;\n}\n\nconst Invoker = ({ network, currentWallet, invokeScript, onConnected }: InvokerProps) => {\n  const [values, setValues] = useState<InvokerState>({\n    networkFee: NETWORK_FEE[0],\n    isSubmitting: false,\n  });\n\n  const isRequiredPrivateKey = currentWallet.provider === \"LOCAL\" && !currentWallet.privateKey;\n  const closeError = () => {\n    setValues({\n      ...values,\n      error: undefined,\n    });\n  };\n\n  const handleSubmit = () => {\n    setValues({\n      ...values,\n      isSubmitting: true,\n    });\n    submitInvoke(currentWallet, invokeScript, values.networkFee, network)\n      .then(invokeResult => {\n        if (invokeResult) {\n          WalletAPI.localStorage.addTransaction(invokeResult);\n          setValues({ ...values, invokeResult });\n          if(invokeScript.operation === \"create\"){\n\t          getHistory().push(\"/create/submitted\", {invokeResult});\n          }\n        }\n      })\n      .catch(e => {\n        setValues({\n          ...values,\n          error: e.message,\n          isSubmitting: false,\n        });\n      });\n  };\n\n  if (values.invokeResult) return <DisplayTxid txid={values.invokeResult.txid} />;\n  return (\n    <>\n      {isRequiredPrivateKey ? (\n        <Wallet currentWallet={currentWallet} onConnected={onConnected} />\n      ) : (\n        <>\n          <NetworkFee\n            value={values.networkFee}\n            setValue={val => setValues({ ...values, networkFee: val })}\n          />\n          <hr />\n          <ReviewInvokeScript invokeScript={invokeScript} />\n          <hr />\n          {values.error && (\n            <div className=\"notification is-danger\">\n              <button onClick={closeError} className=\"delete\" />\n              {values.error}\n            </div>\n          )}\n          <button\n            className={values.isSubmitting ? \"button is-primary is-loading\" : \"button is-primary\"}\n            onClick={handleSubmit}\n          >\n            Confirm\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Invoker;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface ModalProps {\n  onClose: () => void;\n  children: ReactElement;\n}\nconst Modal = ({ onClose, children }: ModalProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n      <button\n        onClick={onClose}\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n      />\n      <div className=\"modal-content\">\n        <div className=\"box\"> {children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const walletRoutes = [\n  {\n    label: \"Connect with O3\",\n    path: \"/provider/O3\",\n  },\n  {\n    label: \"Connect with NEO Line\",\n    path: \"/provider/LINE\",\n  },\n  {\n    label: \"Connect with NOS\",\n    path: \"/provider/NOS\",\n  },\n  {\n    label: \"Import using keys\",\n    path: \"/provider/nep2-wallet\",\n  },\n];\n\nconst WalletList = () => {\n  return (\n    <div className=\"columns is-multiline\">\n      {walletRoutes.map(route => {\n        return (\n          <div key={route.path} className=\"column is-4\">\n            <Link className=\"button is-fullwidth\" to={route.path}>\n              {route.label}\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { FaExclamationCircle } from \"react-icons/fa\";\nimport { CurrentWalletProps } from \"../../../../../types\";\nimport { WalletAPI } from \"../../../../../api\";\n\nconst Providers = ({\n  onConnected,\n  provider,\n}: {\n  onConnected: (wallet: CurrentWalletProps) => void;\n  provider: string;\n}) => {\n  const [account, setAccount] = React.useState<CurrentWalletProps>();\n  const [error, setError] = React.useState(\"\");\n  const [isLoading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    setLoading(true);\n    WalletAPI.providers[provider]\n      .getAccount()\n      .then(account => {\n        setAccount(account);\n        setLoading(false);\n        onConnected(account);\n      })\n      .catch(e => {\n        setError(\"Connect denied.\");\n        setLoading(false);\n      });\n  }, []);\n  if (isLoading) return <div>Connecting..</div>;\n  return (\n    <div>\n      <div\n        className=\"has-text-centered is-flex\"\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {error && (\n          <div>\n            <FaExclamationCircle className=\"has-text-danger is-size-1\" />\n            <br />\n            {error}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Providers, () => true);\n","import React from \"react\";\nimport { MemoryRouter, Route, RouteComponentProps } from \"react-router-dom\";\nimport { CurrentWalletProps } from \"../../types\";\nimport WalletList from \"./components/wallet-list\";\nimport NEP2Wallet from \"./components/wallets/nep2-wallet\";\nimport Providers from \"./components/wallets/providers\";\nimport { FaPlug } from \"react-icons/fa\";\nimport UnlockNep2 from \"./components/wallets/nep2-wallet/scenes/unlock-nep2\";\n\nexport const Wallet = ({\n  currentWallet,\n  onConnected,\n}: {\n  currentWallet?: CurrentWalletProps;\n  onConnected: (wallet: CurrentWalletProps) => void;\n}) => {\n  console.log(\"Render: Component/Wallet\");\n  const isRequiredPrivateKey =\n    currentWallet &&\n    currentWallet.provider === \"LOCAL\" &&\n    !currentWallet.privateKey;\n  // let initialEntries = [\"/\"];\n  // if (isRequiredPrivateKey) {\n  //   initialEntries = [\"/provider/nep2-wallet\"];\n  // }\n  if (currentWallet && isRequiredPrivateKey) {\n    return (\n      <UnlockNep2 currentWallet={currentWallet} onConnected={onConnected} />\n    );\n  }\n  if (currentWallet) return <DisplayConnectedMessage />;\n  return (\n    <MemoryRouter initialEntries={[\"/\"]}>\n      <Route path=\"/\" exact component={WalletList} />\n      <Route\n        exact\n        path=\"/provider/:provider\"\n        component={({\n          match,\n        }: RouteComponentProps<{\n          provider: string;\n        }>) => {\n          const { params } = match;\n          // Get the provider type\n          const { provider } = params;\n          if (provider === \"nep2-wallet\") {\n            return (\n              <NEP2Wallet\n                currentWallet={currentWallet}\n                onConnected={onConnected}\n              />\n            );\n          } else {\n            return <Providers provider={provider} onConnected={onConnected} />;\n          }\n        }}\n      />\n    </MemoryRouter>\n  );\n};\n\nconst DisplayConnectedMessage = () => {\n  return (\n    <div className=\"has-text-centered\">\n      <FaPlug className=\"has-text-info is-size-1\" />\n      <br />\n      <p>{`We've connected!`}</p>\n    </div>\n  );\n};\n","import {\n  CLOSE_INVOKER,\n  CloseInvokerAction,\n  CloseWalletAction,\n  CONNECT_WALLET,\n  ConnectWalletAction,\n  DISCONNECT_WALLET,\n  DisconnectWalletAction,\n  OPEN_INVOKER,\n  OPEN_WALLET,\n  OpenInvokerAction,\n  OpenWalletAction,\n  WalletContextState,\n  CLOSE_WALLET,\n} from \"./context-types\";\n\ntype WalletActionTypes =\n  | OpenInvokerAction\n  | CloseInvokerAction\n  | ConnectWalletAction\n  | DisconnectWalletAction\n  | OpenWalletAction\n  | CloseWalletAction;\n\nexport const reducer = (\n  state: WalletContextState,\n  action: WalletActionTypes\n): WalletContextState => {\n  switch (action.type) {\n    case OPEN_WALLET:\n      return {\n        ...state,\n        isWalletActive: true,\n      };\n    case CLOSE_WALLET:\n      return {\n        ...state,\n        isWalletActive: false,\n      };\n    case OPEN_INVOKER:\n      return {\n        ...state,\n        isInvokerActive: true,\n        invokeScript: action.payload.invokeScript,\n      };\n    case CLOSE_INVOKER:\n      return {\n        ...state,\n        isInvokerActive: false,\n        invokeScript: undefined,\n      };\n    case CONNECT_WALLET:\n      return {\n        ...state,\n        currentWallet: action.payload.currentWallet,\n      };\n    case DISCONNECT_WALLET:\n      return {\n        ...state,\n        currentWallet: undefined,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useReducer,\n} from \"react\";\nimport Invoker from \"./scenes/invoke\";\nimport Modal from \"./scenes/components/modal-wrapper\";\nimport { Wallet } from \"./scenes/wallet\";\nimport { WalletAPI } from \"./api\";\n\nimport { WalletContextProps, WalletContextState } from \"./context-types\";\nimport { reducer } from \"./reducer\";\nimport { CurrentWalletProps, InvokeScript } from \"./types\";\n\nimport {\n  closeInvoker,\n  closeWallet,\n  connectWallet,\n  disconnectWallet,\n  openInvoker,\n  openWallet,\n} from \"./actions\";\nimport { toast } from \"react-toastify\";\n\nconst WalletContext = createContext({} as WalletContextProps);\n\nconst WalletProvider = (props: {\n  network?: string;\n  children: ReactElement | ReactNode;\n}) => {\n  const initialState: WalletContextState = {\n    network: props.network ? props.network : \"TestNet\",\n    isInvokerActive: false,\n    isWalletActive: false,\n    currentWallet: WalletAPI.localStorage.getWallet(),\n    invokeScript: undefined,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const actions = {\n    openWallet: () => dispatch(openWallet()),\n    closeWallet: () => dispatch(closeWallet()),\n    openInvoker: (invokeScript: InvokeScript) => {\n      if (state.currentWallet) {\n        dispatch(openInvoker(invokeScript));\n      } else {\n        toast(\"Connect your wallet\");\n      }\n    },\n    closeInvoker: () => dispatch(closeInvoker()),\n    connectWallet: (wallet: CurrentWalletProps) =>\n      dispatch(connectWallet(wallet)),\n    disconnectWallet: () => dispatch(disconnectWallet()),\n  };\n\n  const store = React.useMemo(() => ({ state, dispatch: actions }), [\n    actions,\n    state,\n  ]);\n\n  const {\n    network,\n    currentWallet,\n    isWalletActive,\n    isInvokerActive,\n    invokeScript,\n  } = state;\n  return (\n    <WalletContext.Provider value={store}>\n      {/*<WalletContext.Provider value={{ state, dispatch: actions }}>*/}\n      {props.children}\n      {isInvokerActive && currentWallet && invokeScript && (\n        <Modal onClose={() => dispatch(closeInvoker())}>\n          <Invoker\n            network={network}\n            currentWallet={currentWallet}\n            invokeScript={invokeScript}\n            onConnected={wallet => dispatch(connectWallet(wallet))}\n          />\n        </Modal>\n      )}\n      {isWalletActive && (\n        <Modal onClose={() => dispatch(closeWallet())}>\n          <Wallet\n            currentWallet={currentWallet}\n            onConnected={wallet => dispatch(connectWallet(wallet))}\n          />\n        </Modal>\n      )}\n    </WalletContext.Provider>\n  );\n};\n\nexport { Wallet, WalletAPI, WalletProvider, WalletContext };\n","export const FTX_CONTRACT_SCRIPT_HASH =\n  \"aac66f9779ca67d819d05492805d251dab02fc7b\";\n\nconst NLP3_CONTRACT_HASHES = {\n  NewNet: \"69e4c3f7385d3f4693c37b5250305314fb35ac17\",\n  TestNet: \"69e4c3f7385d3f4693c37b5250305314fb35ac17\",\n  MainNet: \"\",\n};\n\nexport const NLP3_CONTRACT_HASH =\n  // @ts-ignore\n  NLP3_CONTRACT_HASHES[process.env.REACT_APP_NETWORK];\n\nexport const FETCH_METHODS = {\n  game: \"getLottery\",\n  entry: \"getTicket\",\n  result: \"getGameResult\",\n  winner: \"getWinner\",\n};\n\nexport const MIN_TICKET_PRICE = 1;\nexport const MIN_TICKET_QUANTITY = 100;\nexport const DRAW_REWARD_PERCENTAGE = 5;\nexport const VERIFY_REWARD_PERCENTAGE = 5;\nexport const GENESIS_GAME_RESULT = {\n  globalDrawHeight: 0,\n  lotteryNo: 0,\n  gameNo: 0,\n  lastEntryNumber: 0,\n  caster: \"\",\n  totalSales: 0,\n  jackpot: 0,\n  winners: [],\n  totalTickets: 0,\n  totalVerifiedTickets: 0,\n  createdAt: 0,\n};\n","// @ts-ignore\nimport factorial from \"factorial\";\nimport _ from \"underscore\";\nimport { VERIFY_REWARD_PERCENTAGE, DRAW_REWARD_PERCENTAGE } from \"./consts\";\nimport moment from \"moment\";\n/**\n * @desc Calculate winning chances\n */\nexport const calculateOdds = (number: number, range: number) => {\n  const chances: number[] = [];\n  _.range(1, number + 1).map(i => {\n    let odds = 1;\n    _.range(i).map(j => {\n      odds = odds * (range - j);\n    });\n    chances.push(odds / factorial(i));\n  });\n  return chances;\n};\n\n/**\n * @desc Determine theme color by jackpot chance.\n */\nexport const getColorByOdd = (totalNumbers: number, rangeNumbers: number) => {\n  const odds = calculateOdds(totalNumbers, rangeNumbers);\n  let theme = \"green-theme\";\n  const jackpotChance = odds[totalNumbers - 1];\n  if (jackpotChance > 1000) {\n    theme = \"red-theme\";\n  }\n  if (jackpotChance > 500000) {\n    theme = \"blue-theme\";\n  }\n  return theme;\n};\n\n/**\n * @desc Calculate jackpot using FBGameCollection data.\n * @param {object} data\n */\nexport const calculateJackpot = (data: any) => {\n  const { lastGameResult, fee, ticketHeight, ticketPrice } = data;\n  const { lastEntryNumber, jackpot } = lastGameResult;\n  const totalTickets = ticketHeight - lastEntryNumber;\n  const totalFees =\n    (ticketPrice * (fee + DRAW_REWARD_PERCENTAGE + VERIFY_REWARD_PERCENTAGE)) /\n    100;\n  const currentTicketSales = totalTickets * (ticketPrice - totalFees);\n  return jackpot + currentTicketSales;\n};\n\nexport const formatFrequency = (seconds: number) => {\n  const h = Math.floor(moment.duration(seconds, \"seconds\").asHours());\n  const m = moment.duration(seconds, \"seconds\").minutes();\n  const s = moment.duration(seconds, \"seconds\").seconds();\n  return {\n    h,\n    m,\n    s,\n    label: `${h} Hour ${m ? m + \" Minutes\" : \"\"} ${s ? s + \" Seconds\" : \"\"}`,\n  };\n};\n","import _ from \"underscore\";\nimport React from \"react\";\nimport { calculateOdds } from \"../../../../../../packages/ftw/nlp3/helpers\";\n\ninterface RenderNewGamePreviewProps {\n  numbers: number;\n  rangeNumbers: number;\n}\nconst DisplayOdds = ({ numbers, rangeNumbers }: RenderNewGamePreviewProps) => {\n  const odds = calculateOdds(numbers, rangeNumbers);\n  return (\n    <div className=\"table-container\">\n      <table className=\"table is-fullwidth is-bordered is-striped \">\n        <thead>\n          <tr>\n            <th>Match</th>\n            <th>Odds</th>\n          </tr>\n        </thead>\n        <tbody>\n          {_.range(numbers).map(i => {\n            return (\n              <tr key={`prize-${i}`}>\n                <td>{i + 1} match</td>\n                <td>1/{odds[i]}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DisplayOdds;\n","import React from \"react\";\n\nconst Title = ({ text }: { text: string }) => {\n  return <h3 className=\"title\">{text}</h3>;\n};\n\nexport default Title;\n","import NumberFormat from \"react-number-format\";\nimport React from \"react\";\nimport { withFormik, FormikProps } from \"formik\";\nimport * as Yup from \"yup\";\nimport DisplayOdds from \"./components/display-odds\";\nimport Title from \"../../components/Title\";\n\ninterface FormProps {\n  totalBalls: number;\n  range: number;\n  onSubmit: ({\n    totalBalls,\n    range,\n  }: {\n    totalBalls: number;\n    range: number;\n  }) => void;\n}\n\ninterface FormValues {\n  totalBalls: number;\n  range: number;\n}\n\nconst Basics = (props: FormikProps<FormValues>) => {\n  const { values, handleSubmit, setFieldValue, errors, touched } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <Title text=\"Game Odds\" />\n            <DisplayOdds\n              numbers={values.totalBalls}\n              rangeNumbers={values.range}\n            />\n          </div>\n        </div>\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <div className=\"field\">\n              <h6 className=\"title is-6\">Total balls</h6>\n              <p className=\"subtitle is-7\">How many balls players can pick?</p>\n              <NumberFormat\n                name=\"totalBalls\"\n                value={values.totalBalls}\n                thousandSeparator\n                allowNegative={false}\n                className=\"input\"\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values;\n                  return (\n                    formattedValue === \"\" ||\n                    (floatValue !== undefined && floatValue >= 1)\n                  );\n                }}\n                onValueChange={val =>\n                  setFieldValue(\n                    \"totalBalls\",\n                    val.floatValue ? val.floatValue : \"\"\n                  )\n                }\n              />\n              {errors.totalBalls && touched.totalBalls && (\n                <div className=\"help is-danger\">{errors.totalBalls}</div>\n              )}\n            </div>\n            <div className=\"field\">\n              <h6 className=\"title is-6\">Number range</h6>\n              <p className=\"subtitle is-7\">What is range of number?</p>\n              <NumberFormat\n                name=\"rangeNumbers\"\n                value={values.range}\n                thousandSeparator\n                allowNegative={false}\n                className=\"input\"\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values;\n                  return (\n                    formattedValue === \"\" ||\n                    (floatValue !== undefined && floatValue >= 1)\n                  );\n                }}\n                onValueChange={val =>\n                  setFieldValue(\"range\", val.floatValue ? val.floatValue : \"\")\n                }\n              />\n              {errors.range && touched.range && (\n                <div className=\"help is-danger\">{errors.range}</div>\n              )}\n            </div>\n\n            <div className=\"buttons\">\n              <button\n                // onClick={onNext}\n                type=\"submit\"\n                className=\"button is-link pagination-previous\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default withFormik<FormProps, FormValues>({\n  validateOnBlur: false,\n  validateOnChange: true,\n  validationSchema: () => {\n    return Yup.object().shape({\n      totalBalls: Yup.number().required(\"Required\"),\n      range: Yup.number().required(\"Required\"),\n      // frequency: Yup.number()\n      //   .required(\"Required\")\n      //   .min(1, \"frequency must be greater than or equal to 1 second\"),\n      // fee: Yup.number()\n      //   .max(props.data.maxFee)\n      //   .required(\"It is required\")\n    });\n  },\n\n  mapPropsToValues: props => ({\n    totalBalls: props.totalBalls,\n    range: props.range,\n    // fee: \"\"\n  }),\n  handleSubmit: (values, { props }) => {\n    props.onSubmit({\n      totalBalls: values.totalBalls,\n      range: values.range,\n    });\n    // TODO:Add react-step-wizard TS\n    // @ts-ignore\n    props.nextStep();\n  },\n  displayName: \"MyForm\",\n})(Basics);\n","import React from \"react\";\nimport moment from \"moment\";\nimport NumberFormat from \"react-number-format\";\nimport { FormikProps, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Title from \"../../components/Title\";\nimport { formatFrequency } from \"../../../../packages/ftw/nlp3/helpers\";\n\ninterface FormProps {\n  frequency: number;\n  onSubmit: ({ frequency }: { frequency: number }) => void;\n}\n\ninterface FormValues {\n  frequency: number;\n}\n\nconst FrequencyForm = (props: FormikProps<FormValues>) => {\n  const { values, handleSubmit, setFieldValue, errors, touched } = props;\n  const { frequency } = values;\n  const { h, m, s } = formatFrequency(frequency);\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <Title text=\"Frequency of Drawing\" />\n            <p>\n              Every{\" \"}\n              {`${h} Hour ${m ? m + \" Minutes\" : \"\"} ${\n                s ? s + \" Seconds\" : \"\"\n              }`}\n            </p>\n          </div>\n        </div>\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <h6 className=\"title is-6\">Frequency</h6>\n            <p className=\"subtitle is-7\">How often this game can be drawn?</p>\n            <div className=\"field has-addons\">\n              <p className=\"control\">\n                <NumberFormat\n                  value={frequency}\n                  thousandSeparator\n                  allowNegative={false}\n                  className=\"input\"\n                  isAllowed={values => {\n                    const { formattedValue, floatValue } = values;\n                    return (\n                      formattedValue === \"\" ||\n                      (floatValue !== undefined && floatValue >= 1)\n                    );\n                  }}\n                  onValueChange={value =>\n                    setFieldValue(\"frequency\", value.floatValue)\n                  }\n                />\n              </p>\n              <p className=\"control\">\n                <a className=\"button is-static\">Seconds</a>\n              </p>\n              {errors.frequency && touched.frequency && (\n                <div className=\"help is-danger\">{errors.frequency}</div>\n              )}\n            </div>\n            <div className=\"buttons\">\n              <button\n                // @ts-ignore\n                onClick={props.previousStep}\n                type=\"button\"\n                className=\"button is-light\"\n              >\n                Previous\n              </button>\n              <button type=\"submit\" className=\"button is-link\">\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default withFormik<FormProps, FormValues>({\n  validateOnBlur: false,\n  validateOnChange: true,\n  validationSchema: () => {\n    return Yup.object().shape({\n      frequency: Yup.number()\n        .required(\"Required\")\n        .min(1, \"frequency must be greater than or equal to 1 second\"),\n      // frequency: Yup.number()\n      //   .required(\"Required\")\n      //   .min(1, \"frequency must be greater than or equal to 1 second\"),\n      // fee: Yup.number()\n      //   .max(props.data.maxFee)\n      //   .required(\"It is required\")\n    });\n  },\n\n  mapPropsToValues: props => ({\n    frequency: props.frequency,\n  }),\n  handleSubmit: (values, { props }) => {\n    props.onSubmit({ frequency: values.frequency });\n\t  // @ts-ignore\n    props.nextStep();\n  },\n  displayName: \"MyForm\",\n})(FrequencyForm);\n","import React from \"react\";\nimport {\n  DRAW_REWARD_PERCENTAGE,\n  VERIFY_REWARD_PERCENTAGE,\n} from \"../../../../../../packages/ftw/nlp3/consts\";\ninterface DisplayFeeStructure {\n  ticketPrice: number;\n  fee: number;\n}\nconst DisplayFeeStructure = ({ ticketPrice, fee }: DisplayFeeStructure) => {\n  const systemFee = DRAW_REWARD_PERCENTAGE + VERIFY_REWARD_PERCENTAGE;\n  return (\n    <div className=\"table-container\">\n      <table className=\"table is-fullwidth is-bordered is-striped \">\n        {/*<thead>*/}\n        {/*  <tr>*/}\n        {/*    <th>Draw fee</th>*/}\n        {/*    <th>Verify fee</th>*/}\n        {/*    <th>Verify fee</th>*/}\n        {/*  </tr>*/}\n        {/*</thead>*/}\n        <tbody>\n          <tr>\n            <td>Ticket price</td>\n            <td>{ticketPrice} FTX</td>\n          </tr>\n          <tr>\n            <td>Fee that you take ({fee}%)</td>\n            <td>{(ticketPrice * fee) / 100} FTX</td>\n          </tr>\n          <tr>\n            <td>System fee ({systemFee}%)</td>\n            <td>{(ticketPrice * systemFee) / 100} FTX</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DisplayFeeStructure;\n","import NumberFormat from \"react-number-format\";\nimport React from \"react\";\nimport { FormikProps, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport RenderFees from \"./components/display-fee-structure\";\nimport {\n  DRAW_REWARD_PERCENTAGE,\n  MIN_TICKET_PRICE,\n  VERIFY_REWARD_PERCENTAGE,\n} from \"../../../../packages/ftw/nlp3/consts\";\nimport Title from \"../../components/Title\";\n\ninterface FormProps extends FormValues {\n  onSubmit: ({ ticketPrice, fee }: FormValues) => void;\n}\n\ninterface FormValues {\n  ticketPrice: number;\n  fee: number;\n}\n\nconst Prices = (props: FormikProps<FormValues>) => {\n  const { values, handleSubmit, setFieldValue, errors, touched } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <Title text=\"Ticket price & Fee structure\" />\n            <RenderFees ticketPrice={values.ticketPrice} fee={values.fee} />\n          </div>\n        </div>\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <div className=\"field\">\n              <h6 className=\"title is-6\">Ticket price</h6>\n              <p className=\"subtitle is-7\">How much is ticket price?</p>\n              <div className=\"field has-addons\">\n                <div className=\"control\">\n                  <NumberFormat\n                    name=\"rangeNumbers\"\n                    value={values.ticketPrice}\n                    thousandSeparator\n                    allowNegative={false}\n                    className=\"input\"\n                    isAllowed={values => {\n                      const { formattedValue, floatValue } = values;\n                      return (\n                        formattedValue === \"\" ||\n                        (floatValue !== undefined && floatValue >= 1)\n                      );\n                    }}\n                    onValueChange={val =>\n                      setFieldValue(\n                        \"ticketPrice\",\n                        val.floatValue ? val.floatValue : \"\"\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"control\">\n                  <a className=\"button is-static\">FTX</a>\n                </div>\n              </div>\n              {errors.ticketPrice && touched.ticketPrice && (\n                <div className=\"help is-danger\">{errors.ticketPrice}</div>\n              )}\n            </div>\n\n            <div className=\"field\">\n              <h6 className=\"title is-6\">Fee that you take</h6>\n              <p className=\"subtitle is-7\">\n                How much do you want to collect per ticket sale?\n              </p>\n              <div className=\"field has-addons\">\n                <div className=\"control\">\n                  <NumberFormat\n                    name=\"rangeNumbers\"\n                    value={values.fee}\n                    thousandSeparator\n                    allowNegative={false}\n                    className=\"input\"\n                    isAllowed={values => {\n                      const { formattedValue, floatValue } = values;\n                      return (\n                        formattedValue === \"\" ||\n                        (floatValue !== undefined && floatValue >= 1)\n                      );\n                    }}\n                    onValueChange={val =>\n                      setFieldValue(\"fee\", val.floatValue ? val.floatValue : \"\")\n                    }\n                  />\n                </div>\n                <div className=\"control\">\n                  <a className=\"button is-static\">%</a>\n                </div>\n              </div>\n              {errors.fee && touched.fee && (\n                <div className=\"help is-danger\">{errors.fee}</div>\n              )}\n            </div>\n\n            <div className=\"buttons\">\n              <button\n                // @ts-ignore\n                onClick={props.previousStep}\n                type=\"button\"\n                className=\"button is-light\"\n              >\n                Previous\n              </button>\n              <button type=\"submit\" className=\"button is-link\">\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst WrappedComponent = withFormik<FormProps, FormValues>({\n  validateOnBlur: false,\n  validateOnChange: true,\n  validationSchema: () => {\n    return Yup.lazy(values => {\n      return Yup.object().shape({\n        ticketPrice: Yup.number()\n          .min(MIN_TICKET_PRICE)\n          .required(\"Required\"),\n        fee: Yup.number()\n          .max(100 - (DRAW_REWARD_PERCENTAGE + VERIFY_REWARD_PERCENTAGE))\n          .required(\"Required\"),\n      });\n    });\n  },\n  mapPropsToValues: props => ({\n    ticketPrice: props.ticketPrice,\n    fee: props.fee,\n  }),\n  handleSubmit: (values, { props }) => {\n    props.onSubmit({ ticketPrice: values.ticketPrice, fee: values.fee });\n    // @ts-ignore\n    props.nextStep();\n  },\n  displayName: \"MyForm\",\n})(Prices);\n\nexport default WrappedComponent;\n","import React from \"react\";\nimport {\n  DRAW_REWARD_PERCENTAGE,\n  VERIFY_REWARD_PERCENTAGE,\n} from \"../../../../../../packages/ftw/nlp3/consts\";\ninterface DisplayFeeStructure {\n  prizes: number[];\n}\nconst DisplayPrizeStructure = ({ prizes }: DisplayFeeStructure) => {\n  return (\n    <div className=\"table-container\">\n      <table className=\"table is-fullwidth is-bordered is-striped \">\n        <tbody>\n          {prizes.map((prize, i) => {\n            return (\n              <tr key={i}>\n                <td>\n                  {i + 1} numbers match{\" \"}\n                  {`${i === prizes.length - 1 ? \"(Jackpot)\" : \"\"}`}\n                </td>\n                <td>{prize} %</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DisplayPrizeStructure;\n","import React, { useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport _ from \"underscore\";\nimport DisplayPrizeStructure from \"./components/display-prize-structure\";\nimport Title from \"../../components/Title\";\ninterface PrizeStructure {\n  totalBalls: number;\n  range: number;\n  onSubmit: (props: { prizeStructure: number[] }) => void;\n}\nconst PrizeStructure = (props: PrizeStructure) => {\n  const initPrizes = _.range(0, props.totalBalls).map(() => 0);\n  const [prizes, setPrizes] = useState<number[]>(initPrizes);\n  const [error, setError] = useState(\"\");\n  let totalPercentage = 0;\n  prizes.forEach(i => (totalPercentage = totalPercentage + i));\n  React.useEffect(() => {\n    const initPrizes = _.range(0, props.totalBalls).map(() => 0);\n    setPrizes(initPrizes);\n  }, [props.totalBalls]);\n  return (\n    <div>\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <Title text=\"Prize structure\" />\n            <p className=\"subtitle\">Total percentage must be 100%</p>\n            <DisplayPrizeStructure prizes={prizes} />\n          </div>\n        </div>\n        <div className=\"column is-12\">\n          <div className=\"columns is-multiline\">\n            {_.range(0, props.totalBalls).map(i => {\n              return (\n                <div key={i} className=\"column is-3\">\n                  <div className=\"label\">{`${i + 1} number${\n                    i > 0 ? \"s\" : \"\"\n                  } match winners %`}</div>\n                  <div className=\"field has-addons\">\n                    <p className=\"control\">\n                      <NumberFormat\n                        decimalScale={0}\n                        value={prizes[i] === 0 ? \"\" : prizes[i]}\n                        thousandSeparator\n                        allowNegative={false}\n                        className=\"input\"\n                        isAllowed={values => {\n                          const { formattedValue, floatValue } = values;\n                          return (\n                            formattedValue === \"\" ||\n                            (floatValue !== undefined && floatValue >= 0)\n                          );\n                        }}\n                        onValueChange={val => {\n                          const newPrizes = [...prizes];\n                          // @ts-ignore\n                          newPrizes[i] = val.floatValue;\n                          setPrizes(newPrizes);\n                        }}\n                      />\n                    </p>\n                    <p className=\"control\">\n                      <a className=\"button is-static\">%</a>\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {error && (\n            <div className=\"notification is-danger\">\n              <button onClick={() => setError(\"\")} className=\"delete\" />\n              {error}\n            </div>\n          )}\n          <div className=\"buttons\">\n            <button\n              // @ts-ignore\n              onClick={() => {\n                setError(\"\");\n                // @ts-ignore\n                props.previousStep();\n              }}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Previous\n            </button>\n            <button\n              type=\"button\"\n              // @ts-ignore\n              onClick={() => {\n                if (totalPercentage === 100) {\n                  props.onSubmit({ prizeStructure: prizes });\n                  setError(\"\");\n                  // @ts-ignore\n                  props.nextStep();\n                } else {\n                  setError(\n                    \"Total percentage must be 100%. Please check the numbers\"\n                  );\n                }\n              }}\n              className=\"button is-link\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrizeStructure;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ordinal from \"ordinal\";\nimport { formatFrequency } from \"../../packages/ftw/nlp3/helpers\";\nimport DisplayPrizeStructure from \"../../scenes/builder/scenes/prize-structure/components/display-prize-structure\";\n\ninterface DisplayGameRulesProps {\n  totalBalls: number;\n  range: number;\n  ticketPrice: number;\n  frequency: number;\n  fee: number;\n  initialDeposit?: number;\n  prizeStructure: number[];\n}\nconst DisplayGameRules = ({\n  totalBalls,\n  range,\n  ticketPrice,\n  frequency,\n  fee,\n  prizeStructure,\n  initialDeposit,\n}: DisplayGameRulesProps) => {\n  const { h, m, s } = formatFrequency(frequency);\n\n  return (\n    <div className=\"content\">\n      <h5>Game type</h5>\n      <p>{`${totalBalls}/${range}`}</p>\n      <h5>Ticket price</h5>\n      <p>{ticketPrice} FTX</p>\n      <h5>Frequency</h5>\n      <p>\n        {\" \"}\n        Every{\" \"}\n        {`${h} Hour ${m ? m + \" Minutes\" : \"\"} ${s ? s + \" Seconds\" : \"\"}`}\n      </p>\n      <h5>Fee that owner takes</h5>\n      <p>{fee}%</p>\n      <h5>Prize structure</h5>\n      <DisplayPrizeStructure prizes={prizeStructure} />\n    </div>\n  );\n};\n\nexport default DisplayGameRules;\n","import React, { useState } from \"react\";\nimport Title from \"../../components/Title\";\nimport DisplayGameRules from \"../../../../components/display-game-rules\";\nimport NumberFormat from \"react-number-format\";\nimport { MIN_TICKET_QUANTITY } from \"../../../../packages/ftw/nlp3/consts\";\n\ninterface ConfirmCreateLotto {\n  values: {\n    totalBalls: number;\n    range: number;\n    ticketPrice: number;\n    frequency: number;\n    fee: number;\n    initialDeposit?: number;\n    prizeStructure: number[];\n  };\n  onSubmit: (props: { initialDeposit: number }) => void;\n\thandleInvoke: () => void;\n}\nconst ConfirmCreateLotto = (props: ConfirmCreateLotto) => {\n  const [deposit, setDeposit] = useState(0);\n  const [isConfirmed, setConfirmed] = useState(false);\n  const [error, setError] = useState(\"\");\n  const onConfirm = () => {\n    if (props.values.ticketPrice * MIN_TICKET_QUANTITY > deposit) {\n      setError(\n        `Minimum jackpot is Ticket price x ${MIN_TICKET_QUANTITY} or more.`\n      );\n    } else {\n      setError(\"\");\n      props.onSubmit({\n        initialDeposit: deposit,\n      });\n      setConfirmed(true);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <Title text=\"Review\" />\n            <DisplayGameRules {...props.values} />\n          </div>\n        </div>\n        <div className=\"column is-12\">\n          <div className=\"\">\n            <div className=\"field\">\n              <h6 className=\"title is-6\">Initial pool size</h6>\n              <p className=\"subtitle is-7\">\n                What jackpot amount do you want to start?\n                <br /> Minimum jackpot is Ticket price x ${\n                  MIN_TICKET_QUANTITY\n                }{\" \"}\n                or more.\n              </p>\n              <div className=\"field has-addons\">\n                <div className=\"control\">\n                  <NumberFormat\n                    name=\"rangeNumbers\"\n                    value={deposit === 0 ? \"\" : deposit}\n                    thousandSeparator\n                    allowNegative={false}\n                    className=\"input\"\n                    isAllowed={values => {\n                      const { formattedValue, floatValue } = values;\n                      return (\n                        formattedValue === \"\" ||\n                        (floatValue !== undefined && floatValue >= 1)\n                      );\n                    }}\n                    onValueChange={val =>\n                      setDeposit(val.floatValue ? val.floatValue : 0)\n                    }\n                  />\n                </div>\n                <div className=\"control\">\n                  <a className=\"button is-static\">FTX</a>\n                </div>\n              </div>\n            </div>\n            {error && (\n              <div className=\"notification\">\n                <div onClick={() => setError(\"\")} className=\"delete\" />\n                {error}\n              </div>\n            )}\n            {isConfirmed ? (\n              <div className=\"notification is-info\">\n                <ul>\n                  <li>You CANNOT cancel the game.</li>\n                  <li>You CANNOT withdraw the jackpot.</li>\n                  <li>You are responsible for your game.</li>\n                  <li>\n                    Your {deposit ? deposit.toLocaleString() : 0} FTX will be\n                    transferred to the smart contract when you submit.\n                  </li>\n                </ul>\n                <hr />\n                <button\n                  onClick={props.handleInvoke}\n                  className=\"button is-white\"\n                >\n                  Submit\n                </button>\n              </div>\n            ) : (\n              <div className=\"buttons\">\n                <button\n                  // @ts-ignore\n                  onClick={props.previousStep}\n                  type=\"button\"\n                  className=\"button is-light\"\n                >\n                  Previous\n                </button>\n                <button\n                  onClick={onConfirm}\n                  type=\"submit\"\n                  className=\"button is-link\"\n                >\n                  Confirm Initial pool size\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ConfirmCreateLotto;\n","import { sc, u, wallet } from \"@cityofzion/neon-js\";\n\n// @ts-ignore\nexport const deserializeValue = (str: string): sc.StackItemValue => {\n  const deserializeValue = sc.StackItem.deserialize(str);\n  return deserializeValue.value;\n};\n\nexport function convertString(value: string) {\n  return value ? u.hexstring2str(value) : \"\";\n}\n\nexport function convertNumber(value: string): number {\n  return value ? parseInt(u.isHex(value) ? u.reverseHex(value) : value, 16) : 0;\n}\n\nexport function convertAddress(value: string) {\n  return value ? wallet.getAddressFromScriptHash(u.reverseHex(value)) : \"\";\n}\n\nexport const convertIntToHexstring = (num: number): string => {\n  let size = 8;\n  if (num < 2147483648) {\n    size = 4;\n  }\n  if (num < 32768) {\n    size = 2;\n  }\n  if (num < 128) {\n    size = 1;\n  }\n  return u.reverseHex(u.num2hexstring(num, size));\n};\n","import { u } from \"@cityofzion/neon-js\";\nimport {\n  convertAddress,\n  convertNumber,\n  deserializeValue,\n} from \"../helpers\";\nimport { FTWStatus, EntryItem, ResultItem, StackItem, GameItem } from \"./types\";\ntype NLP3Status = Omit<FTWStatus, \"address\" | \"rpcEndpoint\">;\n\nexport function parseStatus(stack: StackItem[]): NLP3Status {\n  const status = {\n    assets: {\n      FTX: u.fixed82num(stack[0].value),\n    },\n    totalGames: convertNumber(stack[1].value),\n    gameStatus: undefined,\n  };\n  if (stack[2] && stack[2].value) {\n    const gameStatus = deserializeValue(stack[2].value);\n    status.gameStatus = {\n      settings: parseGame(gameStatus[0].value),\n      gameHeight: convertNumber(gameStatus[1].value),\n      ticketHeight: convertNumber(gameStatus[2].value),\n      verificationHeight: convertNumber(gameStatus[3].value),\n      winnerHeight: convertNumber(gameStatus[4].value),\n      currentJackpot: u.fixed82num(gameStatus[5].value),\n      nextDrawingAt: convertNumber(gameStatus[6].value),\n      availableLotteryVerifyCount: convertNumber(gameStatus[7].value),\n      claimCount: convertNumber(gameStatus[8].value),\n    };\n  }\n  return status;\n}\n\nexport function parseGame(byteArray: string): GameItem {\n  let data = deserializeValue(byteArray);\n  data = {\n    gameNo: convertNumber(data[0].value),\n    owner: convertAddress(data[1].value),\n    totalBalls: convertNumber(data[2].value),\n    range: convertNumber(data[3].value),\n    ticketPrice: u.fixed82num(data[4].value),\n    frequency: convertNumber(data[5].value),\n    fee: convertNumber(data[6].value),\n    initialDeposit: u.fixed82num(data[7].value),\n    prizeStructure: data[8].value.map(({ value }: StackItem) =>\n      convertNumber(value)\n    ),\n    createdAt: convertNumber(data[9].value),\n  };\n  return data;\n}\n\nexport function parseEntry(byteArray: string): EntryItem {\n  let data = deserializeValue(byteArray);\n  data = {\n    lotteryNo: convertNumber(data[0].value),\n    gameNo: convertNumber(data[1].value),\n    ticketNo: convertNumber(data[2].value),\n    player: convertAddress(data[3].value),\n    numbers: data[4].value.map(item => convertNumber(item.value)),\n    isVerified: !!data[5].value[0].value,\n    matched: convertNumber(data[5].value[1].value),\n    hasPrize: !!data[5].value[2].value,\n    verifiedAt: convertNumber(data[5].value[3].value),\n    verifiedBy: convertAddress(data[5].value[4].value),\n    isClaimed: !!data[6].value[0].value,\n    prize: u.fixed82num(data[6].value[1].value),\n    reward: u.fixed82num(data[6].value[2].value),\n    claimedAt: convertNumber(data[6].value[3].value),\n    claimedBy: convertAddress(data[6].value[4].value),\n    createdAt: convertNumber(data[7].value),\n  };\n  return data;\n}\n\nexport function parseResult(byteArray: string): ResultItem {\n  const data = deserializeValue(byteArray);\n  return {\n    gameNo: convertNumber(data[0].value),\n    drawNo: convertNumber(data[1].value),\n    winningNumbers: data[2].value.map(item => convertNumber(item.value)),\n    lastEntryNo: convertNumber(data[3].value),\n    caster: convertAddress(data[4].value[0].value),\n    casterReward: u.fixed82num(data[4].value[1].value),\n    totalSales: u.fixed82num(data[5].value),\n    jackpot: u.fixed82num(data[6].value),\n    winners: data[7].value.map(item => convertNumber(item.value)),\n    totalTickets: convertNumber(data[8].value[0].value),\n    totalVerifiedTickets: convertNumber(data[8].value[1].value),\n    createdAt: convertNumber(data[9].value),\n  };\n}\n\nexport default {\n  status: parseStatus,\n  game: parseGame,\n  entry: parseEntry,\n  result: parseResult,\n};\n","import { convertIntToHexstring } from \"../helpers\";\nimport { u } from \"@cityofzion/neon-js\";\nimport { NLP3_CONTRACT_HASH } from \"./consts\";\nimport { InvokeCreateProps } from \"./types\";\n\ninterface ScriptProps {\n  operation: string;\n  scriptHash: string;\n  args: { type: string; value: any }[];\n}\n\nexport const methods = {\n  create: (args: InvokeCreateProps): ScriptProps => {\n    const {\n      ownerAddress,\n      totalBalls,\n      range,\n      ticketPrice,\n      frequency,\n      fee,\n      initialDeposit,\n      prizeStructure,\n    } = args;\n    const script = {\n      operation: \"create\",\n      scriptHash: NLP3_CONTRACT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n        {\n          type: \"Integer\",\n          value: totalBalls,\n        },\n        {\n          type: \"Integer\",\n          value: range,\n        },\n        {\n          type: \"ByteArray\",\n          value: u.num2fixed8(ticketPrice),\n        },\n        {\n          type: \"Integer\",\n          value: frequency,\n        },\n        {\n          type: \"Integer\",\n          value: fee,\n        },\n        {\n          type: \"ByteArray\",\n          value: u.num2fixed8(initialDeposit),\n        },\n      ],\n    };\n    prizeStructure.map((i: number) => {\n      script.args.push({\n        type: \"Integer\",\n        value: i,\n      });\n    });\n    return script;\n  },\n  buy: ({\n    walletAddress,\n    gameNo,\n    numbers,\n  }: {\n    walletAddress: string;\n    gameNo: number;\n    numbers: number[];\n  }): ScriptProps => {\n    const script = {\n      operation: \"buy\",\n      scriptHash: NLP3_CONTRACT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: walletAddress,\n        },\n        {\n          type: \"ByteArray\",\n          value: convertIntToHexstring(gameNo),\n        },\n      ],\n    };\n    numbers.map((i: number) => {\n      script.args.push({\n        type: \"ByteArray\",\n        value: convertIntToHexstring(i),\n      });\n    });\n    return script;\n  },\n  draw: (walletAddress: string, gameNo: number): ScriptProps => {\n    return {\n      operation: \"draw\",\n      scriptHash: NLP3_CONTRACT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: walletAddress,\n        },\n        {\n          type: \"ByteArray\",\n          value: convertIntToHexstring(gameNo),\n        },\n      ],\n    };\n  },\n  verify: (walletAddress: string, gameNo: number): ScriptProps => {\n    return {\n      operation: \"verifyLatest\",\n      scriptHash: NLP3_CONTRACT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: walletAddress,\n        },\n        {\n          type: \"ByteArray\",\n          value: convertIntToHexstring(gameNo),\n        },\n      ],\n    };\n  },\n  claim: (\n    walletAddress: string,\n    gameNo: number,\n    ticketNo: number\n  ): ScriptProps => {\n    return {\n      operation: \"claim\",\n      scriptHash: NLP3_CONTRACT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: walletAddress,\n        },\n        {\n          type: \"ByteArray\",\n          value: convertIntToHexstring(gameNo),\n        },\n        {\n          type: \"ByteArray\",\n          value: convertIntToHexstring(ticketNo),\n        },\n      ],\n    };\n  },\n  withdraw: (\n    walletAddress: string,\n    fundType: number,\n    amount: number\n  ): ScriptProps => {\n    return {\n      operation: \"withdrawFund\",\n      scriptHash: NLP3_CONTRACT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: walletAddress,\n        },\n        {\n          type: \"Integer\",\n          value: fundType,\n        },\n        {\n          type: \"ByteArray\",\n          value: u.num2fixed8(amount),\n        },\n      ],\n    };\n  },\n};\n","import Neon, { u, wallet, rpc } from \"@cityofzion/neon-js\";\nimport NEOAPI from \"../neo\";\nimport Parsers from \"./parsers\";\nimport { FTWStatus, Entries, Games, StackItem, Results } from \"./types\";\nimport { methods } from \"./actions\";\nimport {\n  NLP3_CONTRACT_HASH,\n  FTX_CONTRACT_SCRIPT_HASH,\n  FETCH_METHODS,\n} from \"./consts\";\nimport { convertIntToHexstring } from \"../helpers\";\nclass FTW extends NEOAPI {\n  status: FTWStatus;\n  static contractHash = NLP3_CONTRACT_HASH;\n  static getInvokeScript = methods;\n  static getFetchMethod = FETCH_METHODS;\n  static getParser = Parsers;\n\n  constructor(status: FTWStatus) {\n    super();\n    this.status = status;\n  }\n\n  static async getStatus({\n    network,\n    address,\n    gameNo,\n  }: {\n    network: string;\n    address?: string;\n    gameNo?: string;\n  }): Promise<FTWStatus> {\n    const addressHash = address\n      ? u.reverseHex(wallet.getScriptHashFromAddress(address))\n      : \"\";\n    const sb = Neon.create.scriptBuilder();\n    sb.emitAppCall(FTX_CONTRACT_SCRIPT_HASH, \"balanceOf\", [addressHash]);\n    sb.emitAppCall(NLP3_CONTRACT_HASH, \"getLotteryHeight\", []);\n    if (gameNo) {\n      sb.emitAppCall(NLP3_CONTRACT_HASH, \"loadLottery\", [\n        convertIntToHexstring(parseFloat(gameNo)),\n      ]);\n    }\n    try {\n      const rpcEndpoint = await FTW.getRpcNode(network);\n      const result = await rpc.Query.invokeScript(sb.str).execute(rpcEndpoint);\n      let { stack } = result.result;\n      const data = Parsers.status(stack);\n      return {\n        ...data,\n        rpcEndpoint,\n        address,\n      };\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n\n  getGames = async (\n    currentPage: number,\n    pageSize: number = 30\n  ): Promise<Games> => {\n    const totalItems = this.status.totalGames;\n    const games = await FTW.fetchData({\n      currentPage,\n      pageSize,\n      totalItems,\n      rpcEndpoint: this.status.rpcEndpoint,\n      contractScriptHash: NLP3_CONTRACT_HASH,\n      requestMethod: FETCH_METHODS.game,\n    });\n    return {\n      items: games.map((item: StackItem) => Parsers.game(item.value)),\n      totalItems,\n    };\n  };\n\n  getEntries = async (\n    currentPage: number,\n    pageSize: number = 30\n  ): Promise<Entries> => {\n    const totalItems = this.status.gameStatus.ticketHeight;\n    const entries = await FTW.fetchData({\n      args: [convertIntToHexstring(this.status.gameStatus.settings.gameNo)],\n      currentPage,\n      pageSize,\n      totalItems,\n      rpcEndpoint: this.status.rpcEndpoint,\n      contractScriptHash: NLP3_CONTRACT_HASH,\n      requestMethod: FETCH_METHODS.entry,\n    });\n    return {\n      items: entries.map((item: StackItem) => Parsers.entry(item.value)),\n      totalItems,\n    };\n  };\n\n  getWinners = async (\n    currentPage: number,\n    pageSize: number\n  ): Promise<Entries> => {\n    const totalItems = this.status.gameStatus.winnerHeight;\n    const entries = await FTW.fetchData({\n      args: [convertIntToHexstring(this.status.gameStatus.settings.gameNo)],\n      currentPage,\n      pageSize,\n      totalItems,\n      rpcEndpoint: this.status.rpcEndpoint,\n      contractScriptHash: NLP3_CONTRACT_HASH,\n      requestMethod: FETCH_METHODS.winner,\n    });\n    return {\n      items: entries.map((item: StackItem) => Parsers.entry(item.value)),\n      totalItems,\n    };\n  };\n\n  getResults = async (\n    currentPage: number,\n    pageSize: number = 30\n  ): Promise<Results> => {\n    const totalItems = this.status.gameStatus.gameHeight - 1;\n    const entries = await FTW.fetchData({\n      args: [convertIntToHexstring(this.status.gameStatus.settings.gameNo)],\n      currentPage,\n      pageSize,\n      totalItems,\n      rpcEndpoint: this.status.rpcEndpoint,\n      contractScriptHash: NLP3_CONTRACT_HASH,\n      requestMethod: FETCH_METHODS.result,\n    });\n    return {\n      items: entries.map((item: StackItem) => Parsers.result(item.value)),\n      totalItems,\n    };\n  };\n}\nexport default FTW;\n","import Neon, { api, rpc, settings } from \"@cityofzion/neon-js\";\nimport _ from \"underscore\";\nimport { convertIntToHexstring } from \"../helpers\";\n\ninterface FetchDataProps {\n  rpcEndpoint: string;\n  contractScriptHash: string;\n  requestMethod: string;\n  currentPage: number;\n  totalItems: number;\n  pageSize: number;\n  args?: any[];\n  sort?: 1 | -1;\n}\n\nclass NEOAPI {\n  static async getRpcNode(network: string): Promise<string> {\n  \treturn \"https://test.neologin.io:443\"\n    // try {\n    //   // @ts-ignore\n    //   settings.httpsOnly = true;\n    //   const provider = new api.neoscan.instance(network);\n    //   const endpoint = await provider.getRPCEndpoint();\n    //   console.log(`Rpc: ${endpoint}`);\n    //   return endpoint;\n    // } catch (e) {\n    //   throw new Error(e.message);\n    // }\n  }\n\n  static async fetchData({\n    rpcEndpoint,\n    contractScriptHash,\n    requestMethod,\n    args = [],\n    currentPage,\n    totalItems,\n    pageSize,\n    sort = -1,\n  }: FetchDataProps) {\n    let start;\n    let stop;\n    const totalPages = Math.ceil(totalItems / pageSize);\n    if (sort === 1) {\n      start = (currentPage - 1) * pageSize + 1;\n      stop = totalPages === currentPage ? totalItems + 1 : start + pageSize;\n    } else {\n      const skip = (currentPage - 1) * pageSize;\n      start = totalPages > 1 ? totalItems - skip : totalItems;\n      stop = start - pageSize > 0 ? start - pageSize : 0;\n    }\n\n    const items = _.range(start, stop, sort);\n\n    const sb = Neon.create.scriptBuilder();\n    items.forEach(i => {\n      sb.emitAppCall(contractScriptHash, requestMethod, [\n        ...args,\n        convertIntToHexstring(i),\n      ]);\n    });\n    try {\n      const result = await rpc.Query.invokeScript(sb.str).execute(rpcEndpoint);\n      const { stack } = result.result;\n      return stack;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  }\n}\n\nexport default NEOAPI;\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\nimport NEO from \"./neo\";\n\nimport { CurrentWalletProps } from \"../wallet/types\";\nimport { TaskTimer } from \"tasktimer\";\nimport { FTWStatus } from \"./nlp3/types\";\nimport FTW from \"./nlp3\";\n\nconst FTWContext = createContext(\n  {} as {\n    status?: FTWStatus;\n    isLoading: boolean;\n    error?: string;\n  }\n);\n\nconst FTWProvider = ({\n  network,\n\tgameNo,\n  currentWallet,\n  children,\n}: {\n  network: string;\n  gameNo?: string\n  currentWallet?: CurrentWalletProps;\n  children: ReactElement | ReactNode;\n}) => {\n  const [data, setData] = useState<FTWStatus>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState<string | undefined>();\n\n  const getStatus = () => {\n    setLoading(true);\n    FTW.getStatus({\n      network,\n      address: currentWallet ? currentWallet.address : undefined,\n\t    gameNo\n    })\n      .then(res => {\n        setData(res);\n      })\n      .catch(e => {\n        setError(e.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    getStatus();\n    const timer = new TaskTimer(60000);\n    timer.on(\"tick\", () => {\n      getStatus();\n      console.log(\"Blockchain updated: \" + timer.tickCount);\n    });\n    timer.start();\n    return () => {\n      timer.reset();\n    };\n  }, [currentWallet]);\n  const store = useMemo(() => {\n    return { isLoading, status: data, error };\n  }, [data, isLoading, error]);\n  return <FTWContext.Provider value={store}>{children}</FTWContext.Provider>;\n};\n\nexport { FTW, NEO, FTWProvider, FTWContext };\n","import React from \"react\";\n\nconst PageLoadError = ({error}: {error: string}) => {\n  return <p>{error}</p>;\n};\n\nexport default PageLoadError;\n","import React, { useState, useContext, useMemo } from \"react\";\n// @ts-ignore\nimport StepWizard from \"react-step-wizard\";\nimport Balls from \"./scenes/odds\";\nimport Frequency from \"./scenes/frequency\";\nimport TicketPrice from \"./scenes/ticket-price\";\nimport PrizeStructure from \"./scenes/prize-structure\";\nimport ConfirmCreateLotto from \"./scenes/confirm\";\nimport Steps from \"rc-steps\";\nimport \"rc-steps/assets/index.css\";\nimport { WalletContext } from \"../../packages/wallet\";\nimport { toast } from \"react-toastify\";\nimport FTW from \"../../packages/ftw/nlp3\";\nimport { FTWContext, FTWProvider } from \"../../packages/ftw\";\nimport { CurrentWalletProps } from \"../../packages/wallet/types\";\nimport PageLoadError from \"../game/components/page-error\";\n\nconst LottoBuilder = ({ currentBalance }: { currentBalance: number }) => {\n  console.log(currentBalance);\n  const [step, setStep] = useState(0);\n  const [values, setValues] = useState({\n    totalBalls: 5,\n    range: 39,\n    ticketPrice: 100,\n    frequency: 3600,\n    fee: 20,\n    initialDeposit: 100,\n    prizeStructure: [20, 20, 20, 20, 20],\n  });\n  const { state, dispatch } = useContext(WalletContext);\n  const onSubmit = () => {\n    if (state.currentWallet) {\n      if (currentBalance < values.initialDeposit) {\n        toast.error(\"You don't have enough asset to transfer. Please check your wallet.\");\n      } else {\n        dispatch.openInvoker(\n          FTW.getInvokeScript.create({\n            ownerAddress: state.currentWallet.address,\n            ...values,\n          }),\n        );\n      }\n    } else {\n      toast.error(\"Please connect your wallet\");\n    }\n  };\n  return (\n    <>\n      <Header currentStep={step} />\n      <div style={{ overflow: \"hidden\" }}>\n        <StepWizard\n          // nav={<Nav />}\n          onStepChange={(step: any) => setStep(step.activeStep - 1)}\n          currentStep={step}\n        >\n          <Balls\n            totalBalls={values.totalBalls}\n            range={values.range}\n            onSubmit={({ totalBalls, range }) => {\n              setValues({\n                ...values,\n                totalBalls,\n                range,\n              });\n            }}\n          />\n          <Frequency\n            frequency={values.frequency}\n            onSubmit={({ frequency }) => {\n              setValues({\n                ...values,\n                frequency,\n              });\n            }}\n          />\n          <TicketPrice\n            ticketPrice={values.ticketPrice}\n            fee={values.fee}\n            onSubmit={props => {\n              setValues({\n                ...values,\n                ...props,\n              });\n            }}\n          />\n          <PrizeStructure\n            totalBalls={values.totalBalls}\n            range={values.range}\n            onSubmit={({ prizeStructure }) => {\n              setValues({\n                ...values,\n                prizeStructure,\n              });\n            }}\n          />\n          <ConfirmCreateLotto\n            values={values}\n            onSubmit={({ initialDeposit }) => {\n              setValues({\n                ...values,\n                initialDeposit,\n              });\n            }}\n            handleInvoke={onSubmit}\n          />\n        </StepWizard>\n      </div>\n    </>\n  );\n};\n\nconst Header = ({ currentStep }: { currentStep: number }) => {\n  return (\n    <>\n      <div className=\"has-text-centered\">\n        <h1 className=\"title\">Create a new lotto</h1>\n      </div>\n      <div className=\"pt-6\">\n        <Steps current={currentStep}>\n          <Steps.Step />\n          <Steps.Step />\n          <Steps.Step />\n          <Steps.Step />\n          <Steps.Step />\n        </Steps>\n      </div>\n      <hr />\n    </>\n  );\n};\n\nconst BuilderContainer = ({ currentWallet }: { currentWallet: CurrentWalletProps }) => {\n  const { status, error, isLoading } = useContext(FTWContext);\n\n  return useMemo(() => {\n    if (error || !status) return <PageLoadError error={error} />;\n    return <LottoBuilder currentBalance={status.assets.FTX} />;\n  }, [isLoading]);\n};\n\nexport default () => {\n  const { state, dispatch } = useContext(WalletContext);\n  return useMemo(() => {\n    return (\n      <FTWProvider currentWallet={state.currentWallet} network={state.network}>\n        <section className=\"section is-layout\">\n          <div className=\"container\">\n            <div className=\"box\">\n              {state.currentWallet ? (\n                <BuilderContainer currentWallet={state.currentWallet} />\n              ) : (\n                <div>\n                  <Header currentStep={0} />\n                  <button onClick={dispatch.openWallet} className=\"button is-primary\">\n                    Connect your wallet\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n      </FTWProvider>\n    );\n  }, [state.currentWallet]);\n};\n","import React from \"react\";\n\nconst PageLoadError = ({ error }: { error: string }) => {\n  return (\n    <p>\n      Failed to load data\n      <br />\n      {error}\n    </p>\n  );\n};\n\nexport default PageLoadError;\n","import React, { useState, useEffect, ReactElement } from \"react\";\n// @ts-ignore\nimport Pagination from \"bulma-pagination-react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport PageLoadError from \"../page-error\";\n\ninterface PaginateProps {\n  load: (currentPage: number, pageSize: number) => Promise<ListProps>;\n  pageSize: number;\n  children: ReactElement;\n}\n\ninterface ListProps {\n  items: any[];\n  totalItems: number;\n}\n\nconst WithPagination = ({ pageSize = 30, load, children }: PaginateProps) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n  const [items, setItems] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    load(currentPage, pageSize)\n      .then(res => {\n        const { items, totalItems } = res;\n        setLoading(false);\n        setTotalItems(totalItems);\n        // @ts-ignore\n        setItems(items);\n      })\n      .catch((e: Error) => {\n        setLoading(false);\n        setError(e.message);\n      });\n  }, [currentPage]);\n\n  const childrenWithExtraProp = React.Children.map(children, child => {\n    return React.cloneElement(child, { items, isLoading });\n  });\n  if (isLoading) return <Skeleton count={5} />;\n  if (error) return <PageLoadError error={error} />;\n  return (\n    <>\n      {childrenWithExtraProp}\n      <Pagination\n        pages={Math.ceil(totalItems / pageSize)}\n        currentPage={currentPage}\n        onChange={(page: number) => setCurrentPage(page)}\n      />\n    </>\n  );\n};\n\nexport default WithPagination;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { GameItem } from \"../../../../packages/ftw/nlp3/types\";\nimport { formatFrequency } from \"../../../../packages/ftw/nlp3/helpers\";\nimport { Link } from \"react-router-dom\";\n\ninterface GameListProps {\n  items?: GameItem[];\n  isLoading?: boolean;\n}\nconst GameList = ({ items }: GameListProps) => {\n  return (\n    <div className=\"table-container\">\n      <table className=\"table is-hoverable is-fullwidth has-mobile-cards\">\n        <thead>\n          <tr>\n            <th>Game No</th>\n            <th>Type</th>\n            <th>Ticket price</th>\n            <th>Frequency</th>\n            <th>Owner</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items &&\n            items.map(item => {\n              const frequencyFormat = formatFrequency(item.frequency).label;\n              return (\n                <tr key={item.gameNo}>\n                  <td data-label=\"Ticket\">\n                    <a target=\"_blank\" href={`#/game/${item.gameNo}`}>#{item.gameNo}</a>\n                  </td>\n                  <td data-label=\"Type\">{`${item.totalBalls}/${item.range}`}</td>\n                  <td data-label=\"Ticket price\">{item.ticketPrice} FTX</td>\n                  <td data-label=\"Frequency\">{frequencyFormat}</td>\n                  <td data-label=\"Owner\">{item.owner}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default GameList;\n","import React, { useContext, useMemo } from \"react\";\nimport { WalletContext } from \"../../../../packages/wallet\";\nimport { FTWContext } from \"../../../../packages/ftw\";\n\nconst DisplayCurrentWallet = () => {\n  const { state, dispatch } = useContext(WalletContext);\n  const { status, error, isLoading } = useContext(FTWContext);\n  return useMemo(() => {\n    console.log(\"Render: Component/DisplayCurrentWallet\");\n    if (isLoading) return <></>;\n    if (state.currentWallet) {\n      const { address, provider } = state.currentWallet;\n      return (\n        <div className=\"navbar-item has-dropdown is-hoverable\">\n          <a className=\"navbar-link\">Wallet</a>\n\n          <div className=\"navbar-dropdown is-right\">\n            <div className=\"navbar-item\" style={{ wordBreak: \"break-all\" }}>\n              {provider} Wallet\n              <br />\n              {address}\n              <br />\n              {/*{error ? \"Error\" : status && status.assets.FTX + \" FTX\"}*/}\n            </div>\n            <hr className=\"navbar-divider\" />\n            <a\n              onClick={() => dispatch.disconnectWallet()}\n              className=\"navbar-item\"\n            >\n              Disconnect\n            </a>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <a className=\"navbar-item\" onClick={() => dispatch.openWallet()}>\n          Connect wallet\n        </a>\n      );\n    }\n  }, [state.currentWallet, status, isLoading]);\n};\n\nexport default DisplayCurrentWallet;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport className from \"classnames\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport DisplayCurrentWallet from \"./components/display-current-wallet\";\n\nconst Header = () => {\n  console.log(\"Render: Component/Header\");\n  const [isMenuActive, setMenuActive] = useState(false);\n  const [isScrollTop, setScrollTop] = useState(true);\n  const onToggleMenu = (status: boolean) => setMenuActive(status);\n\n  const onScroll = (isTop: boolean) => setScrollTop(isTop);\n  useEffect(() => {\n    // eslint-disable-next-line no-undef\n    document.addEventListener(\"scroll\", () => {\n      // eslint-disable-next-line no-undef\n      const isTop = window.scrollY < 100;\n      if (isTop !== isScrollTop) {\n        onScroll(isTop);\n      }\n    });\n  }, [isScrollTop]);\n  return (\n    <nav className={className(\"navbar is-white\")}>\n      <div className=\"container is-small\">\n        <div className=\"navbar-brand\">\n          <div className=\"navbar-item\">\n            <Link to=\"/\">\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/logo/ftw_dark.png`}\n                alt=\"FTW logo\"\n              />\n            </Link>\n          </div>\n          <div\n            onClick={() => onToggleMenu(!isMenuActive)}\n            role=\"button\"\n            tabIndex={0}\n            className=\"navbar-burger burger\"\n          >\n            <span />\n            <span />\n            <span />\n          </div>\n        </div>\n        <div\n          className={className(\"navbar-menu\", isMenuActive ? \"is-active\" : \"\")}\n        >\n          <div className=\"navbar-end\">\n\t          <NavLink to=\"/\" activeClassName=\"is-active\" className=\"navbar-item\">\n\t\t          Games\n\t          </NavLink>\n            <NavLink to=\"/create\" activeClassName=\"is-active\" className=\"navbar-item\">\n              Launch\n            </NavLink>\n\t          <a href=\"https://ftwcoin.io\"  className=\"navbar-item\">\n\t\t          About Us\n\t          </a>\n            <DisplayCurrentWallet />\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useContext, useMemo } from \"react\";\nimport { FTWContext, FTW, FTWProvider } from \"../../packages/ftw\";\nimport WithPagination from \"../../components/with-pagination\";\nimport PageLoadError from \"../../components/page-error\";\nimport GameList from \"./components/game-list\";\nimport { WalletContext } from \"../../packages/wallet\";\nimport Header from \"../../components/header\";\n\nconst Home = () => {\n  const { status, error } = useContext(FTWContext);\n  return useMemo(() => {\n    console.log(\"Render: Scene/Home\");\n    if (error) return <PageLoadError error={error} />;\n    if (status) {\n      return (\n        <>\n\t        <Header />\n          <section className=\"section is-layout\">\n            <div className=\"container\">\n              <div className=\"box\">\n                <h1 className=\"title\">Games</h1>\n                <WithPagination pageSize={30} load={new FTW(status).getGames}>\n                  <GameList />\n                </WithPagination>\n              </div>\n            </div>\n          </section>\n        </>\n      );\n    } else {\n      return <div />;\n    }\n  }, [status]);\n};\n\nexport default () => {\n  const walletContext = useContext(WalletContext);\n  const { state } = walletContext;\n  const { currentWallet, network } = state;\n  console.log(\"Render: Scene/Home (Fetching data..)\");\n  return useMemo(() => {\n    return (\n      <FTWProvider currentWallet={currentWallet} network={network}>\n        <Home />\n      </FTWProvider>\n    );\n  }, [currentWallet]);\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\ninterface BallProps {\n  no: number;\n  isActive: boolean;\n  onClick: (no: number) => void;\n}\n\nconst Ball = ({ no, isActive, onClick }: BallProps) => {\n  const style = {\n    ballWrapper: {\n      width: \"35px\",\n      height: \"35px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: \"50%\",\n      margin: \"auto\",\n    },\n  };\n\n  return (\n    <div\n      onClick={() => onClick(no)}\n      className={isActive ? \"has-background-primary\" : \"has-background-light\"}\n      style={style.ballWrapper}\n    >\n      <span\n        className={classNames(\n          \"is-size-7 has-text-weight-bold\",\n          isActive ? \"has-text-white\" : \"\"\n        )}\n      >\n        {no}\n      </span>\n    </div>\n  );\n};\n\nexport default Ball;\n","import React from \"react\";\nimport _ from \"underscore\";\nimport Ball from \"./components/ball\";\n\ninterface Props {\n  maxNumber: number;\n  selectedNumbers: number[];\n  onClick: (no: number) => void;\n}\n\nconst ChooseNumbers = ({ maxNumber, selectedNumbers, onClick }: Props) => {\n  return (\n    <div className=\"columns is-mobile is-multiline\">\n      {_.range(1, maxNumber + 1).map((no: number, i) => {\n        return (\n          <div key={no} className=\"column is-2 is-paddingless pb-2\">\n            <Ball\n              onClick={onClick}\n              no={no}\n              isActive={selectedNumbers.includes(no)}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ChooseNumbers;\n","import React from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\ninterface BallProps {\n  no: number;\n  isActive?: boolean;\n}\n\nclass SvgBackground extends React.Component {\n  render() {\n    return (\n      // @ts-ignore\n      <svg width={116} height={116} xmlns=\"http://www.w3.org/2000/svg\">\n        <title>Ball</title>\n        <metadata />\n        <defs>\n          <style>\n            {`\n             .number-wrapper {\n            fill: #fff;\n            }\n            .shadow-bottom, .shadow-top {\n            fill-rule: evenodd;\n            }\n            .shadow-bottom {\n            opacity: 0.15;\n            }\n            .shadow-top {\n            fill: none;\n            stroke: #fff;\n            stroke-linecap: round;\n            stroke-width: 8.333px;\n            opacity: 0.8;\n            }\n            `}\n          </style>\n        </defs>\n        <g>\n          <title>Layer 1</title>\n          <g>\n            <circle className=\"number-wrapper\" cx=\"56.800904\" cy=\"58.533474\" r=\"27.5\" />\n            <path\n              className=\"shadow-bottom\"\n              d=\"m7.109904,84.173474c20.971,11.161 18.29,11.686 31.7,14.308c33.857,6.619 64.295,-18.679 61.219,-58.4c-0.472,-9.544 -3.216,-19.775 -7.214,-27.028c28.908,19.45 26.5,60.953 13.566,76.4c-19.028,22.733 -39.4,33.962 -73.721,20.645c-13.936,-5.407 -19.673,-15.706 -26.393,-27.063c1.005,1.507 0.666,0.903 0.843,1.138z\"\n            />\n            <path className=\"shadow-top\" d=\"m8.346904,42.614474a42.244,42.244 0 0 1 7.1,-14.128\" />\n            <path className=\"shadow-top\" d=\"m28.194904,17.197474s14.217,-14.977 42.731,-8.968\" />\n          </g>\n        </g>\n      </svg>\n    );\n  }\n}\n\nconst Ball = ({ no, isActive }: BallProps) => {\n  const svgString = encodeURIComponent(renderToStaticMarkup(<SvgBackground />));\n  const dataUri = `url(\"data:image/svg+xml,${svgString}\")`;\n  const style = {\n    ballWrapper: {\n      width: \"40px\",\n      height: \"40px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      boxShadow: \"0 3px 4px rgba(10, 10, 10, 0.1), 0 0 0 0 rgba(10, 10, 10, 0.1)\",\n      borderRadius: \"50%\",\n      backgroundImage: dataUri,\n      backgroundSize: \"cover\",\n    },\n  };\n\n  return (\n    <div\n      className={isActive ? \"has-background-primary\" : \"has-background-light\"}\n      style={style.ballWrapper}\n    >\n      <span className=\"is-size-7 has-text-weight-medium\">{no}</span>\n    </div>\n  );\n};\n\nexport default Ball;\n","import React from \"react\";\nimport _ from \"underscore\";\nimport Ball from \"./components/ball\";\n\ninterface Props {\n  totalBalls: number;\n  selectedNumbers: number[];\n}\n\nconst DisplayNumbers = ({ totalBalls, selectedNumbers }: Props) => {\n  const style = {\n    wrapper: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n    },\n  };\n  return (\n    <div style={style.wrapper}>\n      {_.range(1, totalBalls + 1).map((no: number, i: number) => {\n        const selectedNo = selectedNumbers[i];\n        return <Ball key={no} no={selectedNo} isActive={!!selectedNo} />;\n      })}\n    </div>\n  );\n};\nexport default DisplayNumbers;\n","import {\n  ActionTypes,\n  ADD_NUMBER,\n  AddNumberAction,\n  FORCE_NUMBER,\n  ForceNumberAction,\n  REMOVE_NUMBER,\n  RemoveNumberAction,\n  SelectedNumbers,\n} from \"./types\";\n\nexport const reducer = (numbers: SelectedNumbers, action: ActionTypes) => {\n  switch (action.type) {\n    case ADD_NUMBER:\n      return [...numbers, action.payload];\n    case REMOVE_NUMBER:\n      return numbers.filter((_, index) => index !== action.payload);\n    case FORCE_NUMBER:\n      return action.payload;\n    default:\n      return numbers;\n  }\n};\n\nexport const addNumber = (no: number): AddNumberAction => {\n  return {\n    type: ADD_NUMBER,\n    payload: no,\n  };\n};\n\nexport const removeNumber = (index: number): RemoveNumberAction => {\n  return {\n    type: REMOVE_NUMBER,\n    payload: index,\n  };\n};\n\nexport const forceNumber = (numbers: number[]): ForceNumberAction => {\n  return {\n    type: FORCE_NUMBER,\n    payload: numbers,\n  };\n};\n","export const ADD_NUMBER = \"app/play/ADD_NUMBER\";\nexport const REMOVE_NUMBER = \"app/play/REMOVE_NUMBER\";\nexport const FORCE_NUMBER = \"app/play/FORCE_NUMBER\";\n\nexport type SelectedNumbers = number[];\n\nexport interface AddNumberAction {\n  type: typeof ADD_NUMBER;\n  payload: number;\n}\n\nexport interface RemoveNumberAction {\n  type: typeof REMOVE_NUMBER;\n  payload: number;\n}\n\nexport interface ForceNumberAction {\n  type: typeof FORCE_NUMBER;\n  payload: number[];\n}\n\nexport type ActionTypes =\n  | AddNumberAction\n  | RemoveNumberAction\n  | ForceNumberAction;\n","import React from \"react\";\nimport { FaMagic, FaTrash } from \"react-icons/fa\";\n\ninterface Props {\n  onPick: () => void;\n  onReset: () => void;\n  hasNumber: boolean;\n}\n\nconst AutopickButtons = ({ onPick, onReset, hasNumber }: Props) => {\n  return (\n    <div className=\"buttons\">\n      <button className=\"button is-light\" onClick={onPick}>\n        <FaMagic />\n      </button>\n      {hasNumber && (\n        <button className=\"button is-light\" onClick={onReset}>\n          <FaTrash />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default AutopickButtons;\n","import React, { useReducer } from \"react\";\nimport ChooseNumbers from \"./components/choose-numbers\";\nimport DisplaySelectedNumbers from \"./components/display-selected-numbers\";\nimport { addNumber, reducer, removeNumber, forceNumber } from \"./reducer\";\nimport _ from \"underscore\";\nimport { SelectedNumbers } from \"./types\";\nimport Header from \"./components/header\";\nimport Ball from \"./components/display-selected-numbers/components/ball\";\nimport AutopickButtons from \"./components/autopic-button\";\n\ninterface Props {\n  onBuy: (numbers: SelectedNumbers) => void;\n  maxNumber: number;\n  totalBalls: number;\n}\n\nconst NumberPicker = (props: Props) => {\n  const { onBuy, maxNumber, totalBalls } = props;\n\n  const [selectedNumbers, dispatch] = useReducer(reducer, []);\n\n  const onClickNumber = (no: number): void => {\n    if (selectedNumbers.includes(no)) {\n      const index = selectedNumbers.indexOf(no);\n      dispatch(removeNumber(index));\n    } else {\n      if (selectedNumbers.length < totalBalls) {\n        dispatch(addNumber(no));\n      }\n    }\n  };\n\n  const onAutoPick = (): void => {\n    let randomNumbers: SelectedNumbers = [];\n    if (selectedNumbers.length === totalBalls) {\n      randomNumbers = _.sample(_.range(1, maxNumber + 1), totalBalls);\n    } else {\n      const range = _.range(1, maxNumber + 1).filter(n => {\n        return !selectedNumbers.includes(n);\n      });\n      const samples = _.sample(range, totalBalls - selectedNumbers.length);\n      // @ts-ignore\n      randomNumbers = _.union(selectedNumbers, samples);\n    }\n    dispatch(forceNumber(randomNumbers));\n  };\n\n  const resetNumbers = (): void => {\n    dispatch(forceNumber([]));\n  };\n\n  return (\n    <div>\n      {/*<Header*/}\n      {/*  totalBalls={totalBalls}*/}\n      {/*  maxNumber={maxNumber}*/}\n      {/*  selectedNumbers={selectedNumbers}*/}\n      {/*  onAutoPick={onAutoPick}*/}\n      {/*  resetNumbers={resetNumbers}*/}\n      {/*/>*/}\n      {/*<hr />*/}\n      <DisplaySelectedNumbers\n        totalBalls={totalBalls}\n        selectedNumbers={selectedNumbers}\n      />\n      <hr />\n      <ChooseNumbers\n        maxNumber={maxNumber}\n        selectedNumbers={selectedNumbers}\n        onClick={onClickNumber}\n      />\n      <hr />\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <AutopickButtons\n              onPick={onAutoPick}\n              onReset={resetNumbers}\n              hasNumber={selectedNumbers.length > 0}\n            />\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <button\n              className=\"button is-primary\"\n              disabled={selectedNumbers.length === 0}\n              onClick={() => onBuy(selectedNumbers)}\n            >\n              Buy ticket\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Ball };\n\nexport default NumberPicker;\n","import React, { useContext, useMemo } from \"react\";\nimport CountdownNow from \"react-countdown-now\";\nimport { Link } from \"react-router-dom\";\n// import LotteryTypeDisplay from \"../lottery-type\";\nimport { FTWContext } from \"../../../../packages/ftw\";\n\nconst LotteryCard = () => {\n  const { status, isLoading, error } = useContext(FTWContext);\n  return useMemo(() => {\n    console.log(\"Render: Component/LotteryCard\");\n    if (error || !status) return <div />;\n    const { settings, currentJackpot, nextDrawingAt } = status.gameStatus;\n    const { totalBalls, range } = settings;\n    return (\n      <>\n        {/*<div style={{ padding: \"10px 0 10px 0\" }}>*/}\n        {/*  <LotteryTypeDisplay totalBalls={totalBalls} range={range} />*/}\n        {/*</div>*/}\n        <div className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <div className=\"has-text-centered\">\n                <h1 className=\"heading\">Jackpot</h1>\n                <p className=\"title is-5\">\n                  {currentJackpot.toLocaleString()} FTX\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <div className=\"has-text-centered\">\n                <h1 className=\"heading\">Next drawing</h1>\n                <p className=\"title is-5\">\n                  <CountdownNow\n                    date={nextDrawingAt}\n                    renderer={({ hours, minutes, seconds, completed }) => {\n                      if (completed) {\n                        return (\n                          <Link\n                            className=\"is-small is-light\"\n                            to={`/game/${status.gameStatus.settings.gameNo}/maintain`}\n                          >\n                            Now\n                          </Link>\n                        );\n                      } else {\n                        return `${hours}:${minutes}:${seconds} time left`;\n                      }\n                    }}\n                  />\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }, [isLoading]);\n};\n\nexport default LotteryCard;\n","import React, { useContext, useMemo } from \"react\";\nimport NumberPicker from \"../../components/number-picker\";\nimport FTW from \"../../../../packages/ftw/nlp3\";\n\nimport { toast } from \"react-toastify\";\nimport LotteryCard from \"../../components/card\";\nimport { WalletContext } from \"../../../../packages/wallet\";\nimport { FTWContext } from \"../../../../packages/ftw\";\nimport PageLoadError from \"../../components/page-error\";\n\nconst Play = () => {\n  const { state, dispatch } = useContext(WalletContext);\n  const { status, isLoading, error } = useContext(FTWContext);\n\tconst handleSubmit = (numbers: number[]): void => {\n\t\tif (state.currentWallet) {\n\t\t\tdispatch.openInvoker(\n\t\t\t\tFTW.getInvokeScript.buy({\n\t\t\t\t\twalletAddress: state.currentWallet.address,\n\t\t\t\t\tgameNo: status.gameStatus.settings.gameNo,\n\t\t\t\t\tnumbers,\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\ttoast(\"Connect your wallet\");\n\t\t}\n\t};\n\n  return useMemo(() => {\n\t  console.log(\"Render: Scene/Play\");\n    // if (isLoading) return <PageLoading />;\n    if (error || !status) return <PageLoadError error={error} />;\n    return (\n      <div className=\"box\">\n\t      <LotteryCard />\n        <NumberPicker\n          onBuy={selectedNumbers => handleSubmit(selectedNumbers)}\n          maxNumber={status.gameStatus.settings.range}\n          totalBalls={status.gameStatus.settings.totalBalls}\n        />\n        {/*<LotteryAgreement />*/}\n      </div>\n    );\n  }, [status]);\n};\n\nexport default Play;\n","import React, { useState, useEffect, ReactElement } from \"react\";\n// @ts-ignore\nimport Pagination from \"bulma-pagination-react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport PageLoadError from \"../page-error\";\n\ninterface PaginateProps {\n  load: (currentPage: number, pageSize: number) => Promise<ListProps>;\n  pageSize: number;\n  children: ReactElement;\n}\n\ninterface ListProps {\n  items: any[];\n  totalItems: number;\n}\n\nconst WithPagination = ({ pageSize = 30, load, children }: PaginateProps) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n  const [items, setItems] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    load(currentPage, pageSize)\n      .then(res => {\n        const { items, totalItems } = res;\n        setLoading(false);\n        setTotalItems(totalItems);\n        // @ts-ignore\n        setItems(items);\n      })\n      .catch((e: Error) => {\n        setLoading(false);\n        setError(e.message);\n      });\n  }, [currentPage]);\n\n  const childrenWithExtraProp = React.Children.map(children, child => {\n    return React.cloneElement(child, { items, isLoading });\n  });\n  if (isLoading) return <Skeleton count={5} />;\n  if (error) return <PageLoadError error={error} />;\n  return (\n    <>\n      {childrenWithExtraProp}\n      <hr />\n      <Pagination\n        pages={Math.ceil(totalItems / pageSize)}\n        currentPage={currentPage}\n        onChange={(page: number) => setCurrentPage(page)}\n      />\n    </>\n  );\n};\n\nexport default WithPagination;\n","import React from \"react\";\nimport className from \"classnames\";\nimport Modal from \"../../../../packages/wallet/scenes/components/modal-wrapper\";\n\nconst withDetail = <P extends object>(\n  ListComponent: any,\n  DetailComponent: any\n) => {\n  return class List extends React.PureComponent<P & { status?: any }> {\n    state = {\n      payload: undefined,\n    };\n\n    onOpen = (payload: any) => {\n      this.setState({\n        payload,\n      });\n    };\n\n    onClose = () => {\n      this.setState({ payload: undefined });\n    };\n\n    render() {\n      const { payload } = this.state;\n      return (\n        <div className=\"is-relative\">\n          <div className={className(payload ? \"is-hidden\" : \"\")}>\n            <ListComponent {...this.props} onClick={this.onOpen} />\n          </div>\n          {payload ? (\n            <Modal onClose={this.onClose}>\n              <DetailComponent {...this.props} payload={payload} />\n            </Modal>\n          ) : null}\n        </div>\n      );\n    }\n  };\n};\n\nexport default withDetail;\n","import React, { useContext, useMemo } from \"react\";\nimport PageLoadError from \"../../components/page-error\";\nimport WithPagination from \"../../components/with-pagination\";\nimport WithDetail from \"../../components/with-detail\";\nimport List from \"./components/List\";\nimport Detail from \"./components/Detail\";\n\nimport { FTW, FTWContext } from \"../../../../packages/ftw\";\n\nconst ResultList = WithDetail(List, Detail);\n\nconst Results = () => {\n  console.log(\"Render: Scene/Results\");\n  const data = useContext(FTWContext);\n  const { status, isLoading, error } = data;\n  return useMemo(() => {\n    // if (isLoading) return <p>Loading..</p>;\n    if (error || !status) return <PageLoadError error={error}/>;\n    return (\n      <div className=\"box\">\n        <WithPagination pageSize={30} load={new FTW(status).getResults}>\n          <ResultList {...data} />\n        </WithPagination>\n      </div>\n    );\n  }, [status, isLoading]);\n};\n\nexport default Results;\n","import React from \"react\";\nimport moment from \"moment\";\nimport {FTWStatus, ResultItem} from \"../../../../../packages/ftw/nlp3/types\";\n\ninterface ResultsProps {\n\tstatus?: FTWStatus\n  items?: ResultItem[];\n  isLoading?: boolean;\n  onClick: (data: any) => void;\n}\n\nconst ResultList = ({ items, onClick }: ResultsProps) => {\n  return (\n    <table className=\"table is-fullwidth has-mobile-cards is-hoverable\">\n      <thead>\n        <tr>\n          <th>Draw #</th>\n          <th>Winning numbers</th>\n          <th>Played at</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items && items.length > 0 ? (\n          items.map((game, i) => {\n            const { winningNumbers, drawNo, createdAt } = game;\n            return (\n              <tr onClick={() => onClick(game)} key={i}>\n                <td data-label=\"Game #\">{drawNo}</td>\n                <td data-label=\"Winning numbers\">{winningNumbers.join(\",\")}</td>\n                <td>\n                  {moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}\n                </td>\n              </tr>\n            );\n          })\n        ) : (\n          <tr>\n            <td colSpan={3}>No draws</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ResultList;\n","import React from \"react\";\nimport moment from \"moment/moment\";\nimport { FTWStatus, ResultItem } from \"../../../../../packages/ftw/nlp3/types\";\n\nconst ResultDetail = ({\n  payload,\n  data,\n}: {\n  payload: ResultItem;\n  data: {\n    status: FTWStatus;\n  };\n}) => {\n  const {\n    gameNo,\n    winningNumbers,\n    caster,\n    totalTickets,\n    totalVerifiedTickets,\n    createdAt,\n  } = payload;\n\n\n  return (\n    <div className=\"content\">\n      <h6>Game no</h6>\n      <p>{gameNo}</p>\n      <h6>Winning numbers</h6>\n      <p>{winningNumbers.join(\",\")}</p>\n      <h6>Drawing caster</h6>\n      <p>{caster}</p>\n      <h6>Verification status</h6>\n      <p>{`${Math.round(\n        (totalVerifiedTickets / totalTickets) * 100\n      )}% (${totalVerifiedTickets}/${totalTickets})`}</p>\n      <h6>Drawing at</h6>\n      <p>{moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}</p>\n      {/*{totalVerifiedTickets === totalTickets ? (*/}\n      {/*  <div>*/}\n      {/*    <h6>Winners</h6>*/}\n      {/*    <table className=\"table is-bordered is-striped has-mobile-cards\">*/}\n      {/*      <thead>*/}\n      {/*        <tr>*/}\n      {/*          <th>Matched</th>*/}\n      {/*          <th>FTX tickets</th>*/}\n      {/*          <th>CNEO tickets</th>*/}\n      {/*          <th>CGAS tickets</th>*/}\n      {/*        </tr>*/}\n      {/*      </thead>*/}\n      {/*      <tbody>*/}\n      {/*        <tr>*/}\n      {/*          <td data-label=\"Matched\">5 numbers</td>*/}\n      {/*          <td data-label=\"FTX\">{ftxWinners[3]}</td>*/}\n      {/*          <td data-label=\"CNEO\">{cneoWinners[3]}</td>*/}\n      {/*          <td data-label=\"CGAS\">{cgasWinners[3]}</td>*/}\n      {/*        </tr>*/}\n      {/*        <tr>*/}\n      {/*          <td data-label=\"Matched\">4 numbers</td>*/}\n      {/*          <td data-label=\"FTX\">{ftxWinners[2]}</td>*/}\n      {/*          <td data-label=\"CNEO\">{cneoWinners[2]}</td>*/}\n      {/*          <td data-label=\"CGAS\">{cgasWinners[2]}</td>*/}\n      {/*        </tr>*/}\n      {/*        <tr>*/}\n      {/*          <td data-label=\"Matched\">3 numbers</td>*/}\n      {/*          <td data-label=\"FTX\">{ftxWinners[1]}</td>*/}\n      {/*          <td data-label=\"CNEO\">{cneoWinners[1]}</td>*/}\n      {/*          <td data-label=\"CGAS\">{cgasWinners[1]}</td>*/}\n      {/*        </tr>*/}\n      {/*        <tr>*/}\n      {/*          <td data-label=\"Matched\">2 numbers</td>*/}\n      {/*          <td data-label=\"FTX\">{ftxWinners[0]}</td>*/}\n      {/*          <td data-label=\"CNEO\">{cneoWinners[0]}</td>*/}\n      {/*          <td data-label=\"CGAS\">{cgasWinners[0]}</td>*/}\n      {/*        </tr>*/}\n      {/*      </tbody>*/}\n      {/*    </table>*/}\n      {/*  </div>*/}\n      {/*) : null}*/}\n    </div>\n  );\n};\n\nexport default ResultDetail;\n","import React from \"react\";\nimport CountdownNow from \"react-countdown-now\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\n\nimport { FTW } from \"../../../../../../packages/ftw\";\nimport { CurrentWalletProps, InvokeScript } from \"../../../../../../packages/wallet/types\";\nimport Collapsible from \"react-collapsible\";\n\ninterface DrawProps {\n  gameNo: number;\n  currentWallet?: CurrentWalletProps;\n  openInvoker: (script: InvokeScript) => void;\n  nextDrawingAt: number;\n  totalTicketsToBeVerified: number;\n  hasEntries: boolean;\n}\n\nconst Draw = ({\n  gameNo,\n  currentWallet,\n  openInvoker,\n  nextDrawingAt,\n  totalTicketsToBeVerified,\n  hasEntries,\n}: DrawProps) => {\n  const onDraw = (): void => {\n    if (currentWallet) {\n      const invokeScript = FTW.getInvokeScript.draw(currentWallet.address, gameNo);\n      openInvoker(invokeScript);\n    } else {\n      toast(\"Connect your wallet\");\n    }\n  };\n  const drawAt = moment(nextDrawingAt);\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <figure className=\"image is-64x64\">\n          <img alt={\"draw\"} src={process.env.PUBLIC_URL + \"/assets/images/draw.svg\"} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <p className=\"title is-5\">Draw</p>\n        <div className=\"subtitle is-6\">\n          {drawAt.isAfter(moment()) &&\n            \"Next drawing will be available at \" + moment(nextDrawingAt).format(\"MM-DD hh:mm:ss\")}\n          {totalTicketsToBeVerified > 0 && (\n            <div className=\"has-text-danger\">\n              There are tickets that need to be verified\n            </div>\n          )}\n          {!hasEntries && <div className=\"has-text-danger\">No entries</div>}\n        </div>\n        <Collapsible\n          trigger={<div className=\"is-size-7 has-text-grey-dark\">Show details</div>}\n          lazyRender={true}\n        >\n          <div className=\"content is-small\">\n            <ul>\n              <li>Earn 5% of total ticket sales of the current game</li>\n              <li>You need to participate the current game to be qualified</li>\n              <li>First come first serve basis</li>\n            </ul>\n          </div>\n        </Collapsible>\n      </div>\n      <div className=\"media-right\">\n        <CountdownNow\n          date={nextDrawingAt}\n          renderer={({ hours, minutes, seconds, completed }) => {\n            if (completed) {\n              return (\n                <button\n                  disabled={totalTicketsToBeVerified > 0 || !hasEntries}\n                  onClick={onDraw}\n                  className=\"button is-primary\"\n                >\n                  Draw\n                </button>\n              );\n            }\n            return <div />;\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Draw;\n","import React from \"react\";\nimport {\n  CurrentWalletProps,\n  InvokeScript,\n} from \"../../../../../../packages/wallet/types\";\nimport { toast } from \"react-toastify\";\nimport { FTW } from \"../../../../../../packages/ftw\";\nimport Collapsible from \"react-collapsible\";\n\ninterface VerifyTicketProps {\n  gameNo: number;\n  currentWallet?: CurrentWalletProps;\n  openInvoker: (script: InvokeScript) => void;\n  totalTicketsToBeVerified: number;\n}\nconst VerifyTicketProps = ({\n  currentWallet,\n  openInvoker,\n  gameNo,\n  totalTicketsToBeVerified,\n}: VerifyTicketProps) => {\n  const onVerify = (): void => {\n    if (currentWallet) {\n      const invokeScript = FTW.getInvokeScript.verify(\n        currentWallet.address,\n        gameNo\n      );\n      openInvoker(invokeScript);\n    } else {\n      toast(\"Connect your wallet\");\n    }\n  };\n\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <figure className=\"image is-64x64\">\n          <img\n            alt=\"verify\"\n            // eslint-disable-next-line no-undef\n            src={process.env.PUBLIC_URL + \"/assets/images/balls.svg\"}\n          />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <p className=\"title is-5\">Verify tickets</p>\n        <p className=\"subtitle is-6\">\n          Total {totalTicketsToBeVerified} tickets\n        </p>\n        <Collapsible\n          trigger={\n            <div className=\"is-size-7 has-text-grey-dark\">Show details</div>\n          }\n        >\n          <div className=\"content is-small\">\n            <ul>\n              <li>Earn 0.5 FTX (5% of each ticket price that you verify)</li>\n              <li>New verification will be available right after new draws</li>\n              <li>First come first serve basis</li>\n            </ul>\n          </div>\n        </Collapsible>\n      </div>\n      <div className=\"media-right\">\n        <button\n          disabled={totalTicketsToBeVerified === 0}\n          onClick={onVerify}\n          className=\"button is-primary\"\n        >\n          Verify\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifyTicketProps;\n","import React, { useContext, useMemo, useEffect, useState } from \"react\";\nimport Draw from \"./components/draw\";\nimport Verify from \"./components/verify\";\nimport PageLoadError from \"../../components/page-error\";\n\nimport { FTWContext, FTW } from \"../../../../packages/ftw\";\nimport { WalletContext } from \"../../../../packages/wallet\";\nimport { ResultItem } from \"../../../../packages/ftw/nlp3/types\";\n\nconst Maintain = () => {\n  const { state, dispatch } = useContext(WalletContext);\n  const { status, isLoading, error } = useContext(FTWContext);\n\tconst [lastGameResult, setLastGameResult] = useState<ResultItem>();\n\tuseEffect(() => {\n\t\tif (status) {\n\t\t\tconst loader = new FTW(status);\n\t\t\tloader.getResults(1, 1).then(res => {\n\t\t\t\tsetLastGameResult(res.items[0]);\n\t\t\t});\n\t\t}\n\t}, [status]);\n\tconsole.log(lastGameResult)\n  return useMemo(() => {\n    // if (isLoading) return <PageLoading />;\n    if (error || !status) return <PageLoadError error={error} />;\n\t  if (!lastGameResult) return <div />;\n    console.log(\"Render: Scene/Maintain\");\n    const totalTicketsToBeVerified =\n      status.gameStatus.availableLotteryVerifyCount;\n    return (\n      <div className=\"box\">\n        <Draw\n          gameNo={status.gameStatus.settings.gameNo}\n          currentWallet={state.currentWallet}\n          openInvoker={dispatch.openInvoker}\n          nextDrawingAt={status.gameStatus.nextDrawingAt}\n          totalTicketsToBeVerified={totalTicketsToBeVerified}\n          hasEntries={status.gameStatus.ticketHeight > lastGameResult.lastEntryNo}\n        />\n        <Verify\n          gameNo={status.gameStatus.settings.gameNo}\n          currentWallet={state.currentWallet}\n          openInvoker={dispatch.openInvoker}\n          totalTicketsToBeVerified={totalTicketsToBeVerified}\n        />\n      </div>\n    );\n  }, [status, lastGameResult]);\n};\n\nexport default Maintain;\n","import React, { useContext, useMemo } from \"react\";\nimport { FTWContext } from \"../../../../packages/ftw\";\nimport PageLoadError from \"../../components/page-error\";\nimport { formatFrequency, calculateOdds } from \"../../../../packages/ftw/nlp3/helpers\";\n\nconst About = () => {\n  const { status, isLoading, error } = useContext(FTWContext);\n\n  return useMemo(() => {\n    console.log(\"Render: Scene/About\");\n    // if (isLoading) return <PageLoading />;\n    if (error || !status) return <PageLoadError error={error} />;\n    const { gameStatus } = status;\n    const odds = calculateOdds(gameStatus.settings.totalBalls, gameStatus.settings.range);\n    return (\n      <div className=\"box\">\n        <div className=\"content\">\n          <h5>Game type</h5>\n          <p>{`${gameStatus.settings.totalBalls}/${gameStatus.settings.range}`}</p>\n          <h5>Ticket price</h5>\n          <p>{gameStatus.settings.ticketPrice} FTX</p>\n          <h5>Frequency</h5>\n          <p>Every {formatFrequency(gameStatus.settings.frequency).label}</p>\n          <h5>Prize structure</h5>\n          <table className=\"table is-bordered is-striped \">\n            <thead>\n              <tr>\n                <th>Matched</th>\n                <th>Pool</th>\n                <th>Odd</th>\n              </tr>\n            </thead>\n            <tbody>\n              {gameStatus.settings.prizeStructure.map((category, i) => {\n                return (\n                  <tr key={`prize-${i}`}>\n                    <td>{i + 1} match</td>\n                    <td>{category}%</td>\n                    <td>1/{odds[i]}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          {gameStatus.settings.owner && (\n            <div>\n              <h5>Game owner</h5>\n              <p>{gameStatus.settings.owner}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }, [isLoading]);\n};\n\nexport default About;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { InvokeScript } from \"../../../../../../packages/wallet/types\";\nimport { FTW } from \"../../../../../../packages/ftw\";\nimport { FTWStatus } from \"../../../../../../packages/ftw/nlp3/types\";\nimport { WalletContext } from \"../../../../../../packages/wallet\";\nimport { toast } from \"react-toastify\";\n\nexport interface Ticket {\n  gameNo: number;\n  ticketNo: number;\n  ticketCurrency: string;\n  player: string;\n  numbers: [number];\n  isVerified: boolean;\n  matched: number;\n  isClaimed: boolean;\n  prize: number;\n  createdAt: number;\n  referral: string;\n}\n\ninterface TicketDetailProps {\n  payload: Ticket;\n  status: FTWStatus;\n}\n\nconst TicketDetail = (props: TicketDetailProps) => {\n  const walletContext = useContext(WalletContext);\n  const { state, dispatch } = walletContext;\n  const { status, payload } = props;\n  const {\n    ticketNo,\n    gameNo,\n    numbers,\n    player,\n    isVerified,\n    isClaimed,\n    matched,\n    prize,\n    createdAt,\n  } = payload;\n  // @ts-ignore\n  const { availableLotteryVerifyCount, gameHeight, settings } = status.gameStatus;\nconsole.log(availableLotteryVerifyCount)\n  const onClaim = (ticketNo: number): void => {\n    if (state.currentWallet) {\n      dispatch.openInvoker(\n        FTW.getInvokeScript.claim(\n          state.currentWallet.address,\n          status.gameStatus.settings.gameNo,\n          ticketNo,\n        ),\n      );\n    } else {\n      toast.error(\"Connect your wallet\");\n    }\n  };\n\n  return (\n    <div className=\"content\">\n      <h6>Game no</h6>\n      <p>{gameNo}</p>\n      <h6>Ticket no</h6>\n      <p>{ticketNo}</p>\n      <h6>Player</h6>\n      <p>{player}</p>\n      <h6>Numbers</h6>\n      <p>{numbers.join(\",\")}</p>\n      <h6>Created at</h6>\n      <p> {moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}</p>\n      <h6>Result</h6>\n      <p>\n        {isVerified\n          ? `Matched ${matched} numbers`\n          : gameHeight === gameNo\n          ? \"Playing\"\n          : \"Verifying\"}\n      </p>\n      {matched > 0 ? (\n        isClaimed ? (\n          <>\n            <h6>Prize</h6>\n            <p>{`${prize}`} FTX</p>\n          </>\n        ) : (\n          <>\n            <h6>Claim</h6>\n            {availableLotteryVerifyCount === 0 ? (\n              <button onClick={() => onClaim(ticketNo)} type=\"button\" className=\"button is-primary\">\n                Claim winning prize\n              </button>\n            ) : (\n              <p>Smart contract is verifying other tickets</p>\n            )}\n          </>\n        )\n      ) : null}\n    </div>\n  );\n};\n\nexport default TicketDetail;\n","import React, { useContext, useMemo } from \"react\";\n\nimport WithPagination from \"../../../../components/with-pagination\";\nimport WithDetail from \"../../../../components/with-detail\";\nimport List from \"./list\";\nimport Detail from \"../../components/ticket-detail\";\n\nimport { FTW, FTWContext } from \"../../../../../../packages/ftw\";\nimport PageLoading from \"../../../../components/page-loading\";\nimport PageLoadError from \"../../../../components/page-error\";\n\nconst TicketList = WithDetail(List, Detail);\n\nconst AllEntries = () => {\n  const data = useContext(FTWContext);\n  const { status, isLoading, error } = data;\n  return useMemo(() => {\n    console.log(\"Render: Scene/AllEntries\");\n    // if (isLoading) return <PageLoading />;\n    if (error || !status) return <PageLoadError error={error} />;\n    return (\n      <WithPagination pageSize={30} load={new FTW(status).getEntries}>\n        <TicketList status={status} />\n      </WithPagination>\n    );\n  }, [status]);\n};\n\nexport default AllEntries;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { Ticket } from \"../../components/ticket-detail\";\n\ninterface EntriesProps {\n  items?: Ticket[];\n  onClick: (item: Ticket) => void;\n  isLoading?: boolean;\n}\nconst List = ({ items, onClick }: EntriesProps) => {\n  return (\n    <table className=\"table is-hoverable is-fullwidth has-mobile-cards\">\n      <thead>\n        <tr>\n          <th>Ticket</th>\n          <th>Numbers</th>\n          <th>Player</th>\n          <th>Played at</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items && items.length > 0 ? (\n          items.map(item => (\n            <tr onClick={() => onClick(item)} key={item.ticketNo}>\n              <td data-label=\"Ticket\">#{item.ticketNo}</td>\n              <td>{item.numbers.join(\",\")}</td>\n              <td>{item.player}</td>\n              <td>\n                {moment.unix(item.createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={5}>No Entries</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default List;\n","import React, { useContext, useMemo } from \"react\";\nimport WithPagination from \"../../../../components/with-pagination\";\nimport withDetail from \"../../../../components/with-detail\";\nimport List from \"./list\";\nimport Detail from \"../../components/ticket-detail\";\n\nimport { FTW, FTWContext } from \"../../../../../../packages/ftw\";\nimport PageLoadError from \"../../../../components/page-error\";\n\nconst TicketList = withDetail(List, Detail);\n\nconst Winners = () => {\n  const data = useContext(FTWContext);\n  const { status, isLoading, error } = data;\n  return useMemo(() => {\n    console.log(\"Render: Scene/Winners\");\n    // if (isLoading) return <PageLoading />;\n    if (error || !status) return <PageLoadError error={error} />;\n    return (\n      <WithPagination pageSize={15} load={new FTW(status).getWinners}>\n        <TicketList status={status} />\n      </WithPagination>\n    );\n  }, [status, isLoading]);\n};\n\nexport default Winners;\n","import React from \"react\";\n\ninterface EntriesProps {\n  items?: EntryItem[];\n  onClick: (item: EntryItem) => void;\n  isLoading?: boolean;\n}\n\nexport interface EntryItem {\n  gameNo: number;\n  ticketNo: number;\n  ticketCurrency: number;\n  player: string;\n  numbers: [number];\n  isVerified: boolean;\n  matched: number;\n  isClaimed: boolean;\n  prize: number;\n  createdAt: number;\n  referral: string;\n}\n\nconst WinnerList = ({ items, onClick }: EntriesProps) => {\n  return (\n    <table className=\"table is-fullwidth has-mobile-cards is-hoverable\">\n      <thead>\n        <tr>\n          <th>Draw</th>\n          <th>Ticket</th>\n          <th>Numbers</th>\n          <th>Player</th>\n          <th>Matched</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items && items.length > 0 ? (\n          items.map(item => (\n            <tr onClick={() => onClick(item)} key={item.ticketNo}>\n              <td data-label=\"Draw\">#{item.gameNo}</td>\n              <td data-label=\"Ticket\">#{item.ticketNo}</td>\n              <td>{item.numbers.join(\",\")}</td>\n              <td>{item.player}</td>\n              <td>{item.matched} numbers</td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={4}>No winners</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default WinnerList;\n","import React from \"react\";\nimport { NavLink, Route, RouteComponentProps } from \"react-router-dom\";\nimport AllEntries from \"./scenes/all-tickets\";\nimport Winners from \"./scenes/winners\";\n\nconst Entries = ({\n  location,\n  baseUrl,\n}: { baseUrl: string } & RouteComponentProps) => {\n  return (\n    <div className={\"box\"}>\n      <Nav path={location.pathname} baseUrl={baseUrl} />\n      <div>\n        <Route\n          exact={true}\n          path={`${baseUrl}/entries`}\n          component={AllEntries}\n        />\n        <Route path={`${baseUrl}/entries/winnings`} component={Winners} />\n      </div>\n    </div>\n  );\n};\n\nconst Nav = ({ path, baseUrl }: { path: string; baseUrl: string }) => {\n  return (\n    <div className=\"tabs\">\n      <ul>\n        <li className={path === `${baseUrl}/entries` ? \"is-active\" : \"\"}>\n          <NavLink to={`${baseUrl}/entries`}>All entries</NavLink>\n        </li>\n        <li\n          className={path === `${baseUrl}/entries/winnings` ? \"is-active\" : \"\"}\n        >\n          <NavLink\n            activeClassName=\"is-active\"\n            to={`${baseUrl}/entries/winnings`}\n          >\n            Winning tickets\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Entries;\n","import React, { useState } from \"react\";\nimport { WalletAPI } from \"../../../../packages/wallet\";\n\nconst Transactions = () => {\n  console.log(\"Render: Scene/Transactions\");\n  const [txList, setList] = useState(WalletAPI.localStorage.getTransactions());\n  const onClear = () => {\n    if (\n      // eslint-disable-next-line no-restricted-globals,no-undef\n      confirm(\"You will lose all transactions. Do you want to continue?\")\n    ) {\n      WalletAPI.localStorage.clearTransaction();\n      setList([]);\n    }\n  };\n  return (\n    <div className=\"box\">\n      <div className=\"level is-mobile\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-5\">Transactions</h1>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {txList.length > 0 && (\n              <button onClick={onClear} className=\"button is-small is-light\">\n                Clear\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"table-container\">\n        {txList.length > 0 ? (\n          <table className=\"table is-hoverable is-fullwidth has-mobile-cards\">\n            <thead>\n              <tr>\n                <th>Txid</th>\n                <th>Node</th>\n              </tr>\n            </thead>\n            <tbody>\n              {txList.map(({ txid, node }) => {\n                return (\n                  <tr key={txid}>\n                    <td>\n                      <a\n                        target=\"_blank\n\t                \"\n                        href={`https://testnet-explorer.o3.network/transactions/${txid}`}\n                      >\n                        {txid}\n                      </a>\n                    </td>\n                    <td>{node}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        ) : (\n          <p>No transactions</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Transactions;\n","export const routes = [\n  {\n    exact: true,\n    name: \"Play\",\n    path: \"\",\n  },\n  {\n    name: \"Draw history\",\n    path: \"/results\",\n  },\n  {\n    name: \"Entries\",\n    path: \"/entries\",\n  },\n  {\n    name: \"Earn FTX\",\n    path: \"/maintain\",\n  },\n  {\n    name: \"Transactions\",\n    path: \"/transactions\",\n  },\n  {\n    name: \"About\",\n    path: \"/about\",\n  },\n];\n","import React, { useContext, useMemo } from \"react\";\nimport { WalletContext } from \"../../../../packages/wallet\";\nimport { FTWContext } from \"../../../../packages/ftw\";\n\nconst DisplayWallet = () => {\n  const { state, dispatch } = useContext(WalletContext);\n  const { status, isLoading } = useContext(FTWContext);\n  return useMemo(() => {\n    console.log(\"Render: Component/DisplayWallet\");\n    if (state.currentWallet) {\n      const { address, provider } = state.currentWallet;\n      return (\n        <>\n          <div className=\"content is-small\">\n            <p style={{ wordBreak: \"break-all\" }}>\n              <strong>Wallet</strong>\n              <br />\n              {provider}\n              <br />\n              <strong>Address</strong>\n              <br />\n              {address}\n              <br />\n              {status && (\n                <>\n                  <strong>FTX balance</strong>\n                  <br />\n                  {status.assets.FTX} FTX\n                </>\n              )}\n            </p>\n          </div>\n          <hr />\n          <button\n            type=\"button\"\n            onClick={() => dispatch.disconnectWallet()}\n            className=\"button is-light is-fullwidth\"\n          >\n            Disconnect wallet\n          </button>\n        </>\n      );\n    } else {\n      return (\n        <button\n          onClick={() => dispatch.openWallet()}\n          className=\"button is-light is-fullwidth\"\n        >\n          Connect wallet\n        </button>\n      );\n    }\n  }, [status]);\n};\n\nexport default DisplayWallet;\n","import React from \"react\";\nimport {\n  NavLink,\n  withRouter,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport { routes } from \"../../scenes/routes\";\n\nimport DisplayWallet from \"../display-wallet\";\n\nconst Nav = (props: { baseUrl: string, onClick:() => void } & RouteComponentProps) => {\n  return (\n    <>\n      <aside className=\"menu\" style={{ marginBottom: \"20px\" }}>\n        <ul className=\"menu-list\">\n          {routes.map(route => {\n            return (\n              <li key={route.path}>\n                <NavLink\n\t                onClick={props.onClick}\n                  exact={route.exact}\n                  activeClassName=\"is-active\"\n                  to={`${props.baseUrl}${route.path}`}\n                >\n                  {route.name}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </aside>\n      <hr />\n      <DisplayWallet />\n    </>\n  );\n};\n\nexport default withRouter(Nav);\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Link, RouteComponentProps } from \"react-router-dom\";\nimport classNames from \"classnames\";\n// @ts-ignore\nimport SideNav from \"react-simple-sidenav\";\nimport Menu from \"../nav\";\n\nconst Header = ({ baseUrl }: { baseUrl: string }) => {\n  const [isSidebarActive, setSidebarStatus] = useState(false);\n  return (\n    <div className=\"is-hidden-tablet\">\n      <nav className={classNames(\"navbar is-white has-shadow\")}>\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            {/*<Link to={baseUrl} className=\"navbar-item\">*/}\n            {/*  /!*Good luck*!/*/}\n            {/*</Link>*/}\n            <div\n              onClick={() => setSidebarStatus(!isSidebarActive)}\n              role=\"button\"\n              className={classNames(\"navbar-burger\", isSidebarActive && \"is-active\")}\n            >\n              <span />\n              <span />\n              <span />\n            </div>\n          </div>\n          <div className=\"navbar-menu\">\n            <div className=\"navbar-end\"></div>\n          </div>\n        </div>\n        <SideNav\n          style={{ zIndex: 40 }}\n          navStyle={{ width: \"80%\" }}\n          showNav={isSidebarActive}\n          onHideNav={() => setSidebarStatus(false)}\n          // eslint-disable-next-line react/no-children-prop\n        >\n          <div style={{ padding: \"0.75rem\" }}>\n            <Menu baseUrl={baseUrl} onClick={() => setSidebarStatus(false)} />\n          </div>\n        </SideNav>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Route } from \"react-router\";\nimport Play from \"./play\";\nimport Results from \"./results\";\nimport Maintain from \"./maintain\";\nimport About from \"./about\";\nimport Entries from \"./entries\";\nimport Transactions from \"./transactions\";\nimport Nav from \"../components/nav\";\nimport Header from \"../components/header\";\n\nconst App = ({ gameNo }: { gameNo: string }) => {\n  console.log(\"Render: Scene/Game\");\n  const baseUrl = `/game/${gameNo}`;\n  return (\n    <div>\n      <Header baseUrl={baseUrl} />\n      <div className=\"section is-layout\">\n        <div className=\"container\">\n          <div className=\"columns is-multiline\">\n            <div style={{ width: \"250px\" }} className=\"column is-narrow is-hidden-touch\">\n              {/*<LotteryCard />*/}\n            </div>\n            <div className=\"column\">\n              <Route path={baseUrl} exact={true} component={Play} />\n              <Route path={`${baseUrl}/results`} component={Results} />\n              <Route\n                path={`${baseUrl}/entries`}\n                component={props => <Entries baseUrl={baseUrl} {...props} />}\n              />\n              <Route path={`${baseUrl}/transactions`} component={Transactions} />\n              <Route path={`${baseUrl}/maintain`} component={Maintain} />\n              <Route path={`${baseUrl}/about`} component={About} />\n            </div>\n            <div className=\"column is-narrow is-hidden-touch\" style={{ width: \"250px\" }}>\n              <div className=\"box\">\n                <Nav onClick={() => false} baseUrl={baseUrl} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import App from \"./scenes\";\nimport React, { useContext, useMemo } from \"react\";\nimport { FTWProvider } from \"../../packages/ftw\";\nimport { WalletContext } from \"../../packages/wallet\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nexport default ({ match }: RouteComponentProps<{ gameNo: string }>) => {\n  const { params } = match;\n  const walletContext = useContext(WalletContext);\n  const { state, dispatch } = walletContext;\n  const { currentWallet, network } = state;\n  console.log(\"Render: Scene/Game (Fetching data..)\");\n  return useMemo(() => {\n    return (\n      <FTWProvider\n        currentWallet={currentWallet}\n        network={network}\n        gameNo={params.gameNo}\n      >\n        <App gameNo={params.gameNo} />\n      </FTWProvider>\n    );\n  }, [currentWallet]);\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Create = () => {\n  return (\n    <div>\n      <div className=\"hero is-danger is-medium\">\n        <div className=\"hero-body\">\n          <div className=\"has-text-centered\">\n            <h1 className=\"title\">\n              <figure\n                className=\"image is-128x128\"\n                style={{\n                  margin: \"0 auto\",\n                  backgroundColor: \"white\",\n                  borderRadius: \"50%\",\n                  padding: \"30px\",\n                }}\n              >\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/lotto.svg`}\n                />\n              </figure>\n            </h1>\n            <h1 className=\"title is-spaced\">Build Your Blockchain Lotto</h1>\n            <h2 className=\"subtitle\">\n              No coding skills are required.\n              <br /> It only takes a few minutes to start your blockchain\n              business.\n            </h2>\n            <Link className=\"button is-danger is-inverted\" to={\"/create/start\"}>\n              Start\n            </Link>\n          </div>\n        </div>\n      </div>\n      <section\n        id=\"how-it-works\"\n        className=\"section has-background-light is-medium\"\n      >\n        <div className=\"container is-small has-text-centered\">\n          <div className=\"columns\">\n            <div className=\"column is-half is-offset-one-quarter\">\n              <h1 className=\"title is-spaced\">How it works</h1>\n              <h2 className=\"subtitle mb-6\">\n                Our smart contract allows businesses to create fully automated\n                custom lotteries.\n              </h2>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/balls.svg`}\n                />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">1. Customization</h5>\n              <p className=\"subtitle is-6\">\n                Customize your game. Your options are ticket price, balls,\n                ranges, frequency, fees, and more.\n              </p>\n            </div>\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img src={`${process.env.PUBLIC_URL}/assets/images/www.svg`} />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">2. Embed</h5>\n              <p className=\"subtitle is-6\">\n                {/* eslint-disable-next-line react/no-unescaped-entities */}\n                Embed your game into your website. Don't have a website yet? We\n                can help you launch a custom website.\n              </p>\n            </div>\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/earnings.svg`}\n                />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">3. Launch</h5>\n              <p className=\"subtitle is-6\">\n                Promote your game and sell tickets to your players.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"section has-background-white has-text-centered is-medium\">\n        <div className=\"container is-small\">\n          <h1 className=\"title is-spaced\">Settings</h1>\n          <p className=\"subtitle mb-6\">Build with your own settings</p>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/lotto.svg`}\n                />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">Ticket price</h5>\n              <p className=\"subtitle is-6\">What is your ticket price?</p>\n            </div>\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/balls.svg`}\n                />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">Balls and Numbers</h5>\n              <p className=\"subtitle is-6\">Determine your winning chances.</p>\n            </div>\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/hourglass.svg`}\n                />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">Frequency</h5>\n              <p className=\"subtitle is-6\">\n                How often your game will be drawn?\n              </p>\n            </div>\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/control.svg`}\n                />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">Fee</h5>\n              <p className=\"subtitle is-6\">\n                You much do you want to collect from each ticket sales.\n              </p>\n            </div>\n            <div className=\"column\">\n              <span className=\"icon is-large\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/winner.svg`}\n                />\n              </span>\n              <br />\n              <br />\n              <h5 className=\"title is-5 is-spaced\">Prizes</h5>\n              <p className=\"subtitle is-6\">\n                Decide percentages of winners share from the prize pool.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero is-light\">\n        <div className=\"hero-body\">\n          <div className=\"has-text-centered\">\n            <h1 className=\"title\">\n              <figure\n                className=\"image is-128x128\"\n                style={{\n                  margin: \"0 auto\",\n                  backgroundColor: \"white\",\n                  borderRadius: \"50%\",\n                  padding: \"30px\",\n                }}\n              >\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/images/claim.svg`}\n                />\n              </figure>\n            </h1>\n            <h1 className=\"title is-spaced\">Launch your lotto today</h1>\n            {/*<p className=\"subtitle mb-6\"></p>*/}\n            <Link className=\"button is-danger\" to={\"/create/start\"}>\n              Start\n            </Link>\n          </div>\n        </div>\n      </div>\n      <footer className=\"footer has-background-white\">\n        <div className=\"content has-text-centered\">\n          <a href=\"http://www.ftwcoin.io\">\n            <img\n              alt=\"FTW logo\"\n              src={`${process.env.PUBLIC_URL}/assets/logo/ftw_dark.png`}\n              style={{ maxHeight: \"1.75rem\" }}\n              className=\"mb-3\"\n            />\n          </a>\n          <p>The Future of Blockchain Lottery</p>\n        </div>\n      </footer>\n      {/*<Footer />*/}\n    </div>\n  );\n};\n\nexport default Create;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Submitted = props => {\n  return (\n    <section className=\"section is-layout\">\n      <div className=\"container\">\n        <div className=\"box\">\n          <h1 className=\"title\">Your request submitted</h1>\n          <p>\n            The blockchain is processing your transaction now. Once it is accepted, you can find\n            your game live at\n            <br />\n            <Link to=\"/\">Game list</Link>\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Submitted;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ReactRouterGlobalHistory } from 'react-router-global-history';\nimport { Route } from \"react-router\";\nimport LottoBuilder from \"./builder\";\nimport Home from \"./home\";\nimport Game from \"./game\";\nimport Create from \"./create\";\nimport Submitted from \"./builder/scenes/submitted\";\n\nconst Content = () => {\n  console.log(\"Render: Content\");\n  return (\n    <>\n      <HashRouter>\n        <ReactRouterGlobalHistory />\n        {/*<Header />*/}\n        <Route path={\"/\"} exact component={Home} />\n        <Route path={\"/create\"} exact component={Create} />\n        <Route path={\"/create/start\"} exact component={LottoBuilder} />\n        <Route path={\"/create/submitted\"} exact component={Submitted} />\n        <Route path={\"/game/:gameNo\"} component={Game} />\n        {/*<Footer />*/}\n      </HashRouter>\n      {/*<DisplayBlockchainConnection />*/}\n    </>\n  );\n};\nexport default Content;\n","import React, { useContext, useMemo } from \"react\";\nimport { WalletProvider, WalletContext } from \"../packages/wallet\";\nimport { ToastContainer } from \"react-toastify\";\nimport Content from \"./content\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.scss\";\n\nfunction App() {\n  console.log(\"Render: App\");\n  return (\n    <WalletProvider network={process.env.REACT_APP_NETWORK}>\n      <ToastContainer position={\"bottom-center\"} />\n      <Content />\n    </WalletProvider>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./scenes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Neon from \"@cityofzion/neon-js\";\nimport store from \"store2\";\n// import operations from \"store/plugins/operations\";\n\nimport {\n  CurrentWalletProps,\n  InvokeResult,\n  StoredWalletProps,\n} from \"../../types\";\n\nconst getWallet = (): CurrentWalletProps => {\n  return store.get(\"CURRENT_WALLET\");\n};\n\nconst getList = (): StoredWalletProps[] => {\n  return store.has(\"SAVED_WALLETS\") ? store.get(\"SAVED_WALLETS\") : [];\n};\n\nconst getPrivateKey = async (encryptedKey: string, password: string) => {\n  try {\n    const account = await Neon.create.account(encryptedKey).decrypt(password);\n    return account.privateKey;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\n\nconst setWallet = (wallet: CurrentWalletProps) => {\n  const newWallet = {\n    provider: wallet.provider,\n    encryptedKey: wallet.encryptedKey,\n    address: wallet.address,\n  };\n  store.set(\"CURRENT_WALLET\", newWallet);\n\n  const savedWallets = getList();\n  // Add in savedWalletList in local storage\n  let i = 0;\n  savedWallets.forEach((item: StoredWalletProps) => {\n    if (item.encryptedKey === newWallet.encryptedKey) {\n      i += 1;\n    }\n  });\n  if (i === 0 && newWallet.address && newWallet.encryptedKey) {\n    // @ts-ignore\n    store.push(\"SAVED_WALLETS\", newWallet);\n  }\n};\n\nconst removeWallet = () => {\n  store.remove(\"CURRENT_WALLET\");\n};\n\nconst getTransactions = (): InvokeResult[] => {\n  return store.has(\"TRANSACTIONS\") ? store.get(\"TRANSACTIONS\") : [];\n};\n\nconst addTransaction = (transaction: InvokeResult) => {\n  let list = [transaction];\n  if (store.has(\"TRANSACTIONS\")) {\n    list = [transaction, ...store.get(\"TRANSACTIONS\")];\n  }\n  store.set(\"TRANSACTIONS\", list);\n};\n\nconst removeTransaction = (transaction: InvokeResult) => {\n  store.remove(\"TRANSACTIONS\", transaction);\n};\n\nconst clearTransaction = () => {\n  store.set(\"TRANSACTIONS\", []);\n};\n\nexport const LocalWallet = {\n  getWallet,\n  setWallet,\n  removeWallet,\n  getPrivateKey,\n  getList,\n  getTransactions,\n  addTransaction,\n  removeTransaction,\n  clearTransaction,\n};\n","import o3dapi from \"o3-dapi-core\";\nimport o3dapiNeo from \"o3-dapi-neo\";\nimport { DoInvokeProps } from \"./index\";\no3dapi.initPlugins([o3dapiNeo]);\n\nconst doInvoke = async ({ script, networkFee, network }: DoInvokeProps) => {\n  try {\n    const o3Script = {\n      scriptHash: script.scriptHash,\n      operation: script.operation,\n      args: script.args,\n      fee: networkFee,\n      network,\n    };\n    const res = await o3dapi.NEO.invoke(o3Script);\n    return {\n      txid: res.txid,\n      node: res.nodeUrl,\n    };\n  } catch (e) {\n    throw new Error(`${e.type}: ${e.description}`);\n  }\n};\nconst getAccount = async () => {\n  try {\n    const account = await o3dapi.NEO.getAccount();\n    const { address } = account;\n    return {\n      provider: \"O3\",\n      address,\n    };\n  } catch (e) {\n    throw new Error(`${e.type}: ${e.description}`);\n  }\n};\n\nexport const O3 = {\n  doInvoke,\n  getAccount,\n};\n","import { u, wallet } from \"@cityofzion/neon-js\";\nimport { InvokeScriptArgs } from \"../types\";\n\nexport const parseScriptParams = (args: InvokeScriptArgs[]): any[] => {\n  return args.map(arg => {\n    const { type, value } = arg;\n    switch (type) {\n      case \"String\":\n        return u.str2hexstring(value.toString());\n      case \"Address\":\n        return u.reverseHex(wallet.getScriptHashFromAddress(value.toString()));\n      case \"ByteArray\":\n        return value;\n      case \"Integer\":\n        return value;\n    }\n  });\n};\n","import { parseScriptParams } from \"../helpers\";\nimport { DoInvokeProps } from \"./index\";\n\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    NOS: any;\n  }\n}\n\nconst doInvoke = async ({ script }: DoInvokeProps) => {\n  //TODO::Nos doesn't have network fee configuration yet.\n  // eslint-disable-next-line no-undef\n  if (window.NOS) {\n    try {\n      // eslint-disable-next-line no-undef\n      const nos = window.NOS.V1;\n      script.args = parseScriptParams(script.args);\n      // remove default encoding option\n      script.encodeArgs = false;\n      const txid = await nos.invoke(script);\n      return {\n        txid,\n      };\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  } else {\n    throw new Error(\"Cannot find NOS client. Open it using NOS browser \");\n  }\n};\n\nconst getAccount = async () => {\n  try {\n    // eslint-disable-next-line no-undef\n    const nos = window.NOS.V1;\n    const address = await nos.getAddress();\n    return {\n      provider: \"NOS\",\n      address,\n    };\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\n\nexport const NOS = {\n  doInvoke,\n  getAccount,\n};\n","import Neon, { api, wallet as NeonWallet } from \"@cityofzion/neon-js\";\nimport { DoInvokeProps } from \"./index\";\nimport { parseScriptParams } from \"../helpers\";\n\nconst doInvoke = async ({\n  wallet,\n  script,\n  networkFee,\n  network,\n}: DoInvokeProps) => {\n  try {\n    const provider = new api.neoscan.instance(network);\n    const rpcEndpoint = await provider.getRPCEndpoint();\n    const balance = await provider.getBalance(wallet.address);\n    const account = new NeonWallet.Account(wallet.privateKey);\n    const config = {\n      api: provider,\n      url: rpcEndpoint,\n      account,\n      privateKey: wallet.privateKey,\n      fees: networkFee,\n      balance,\n      script: Neon.create.script({\n        scriptHash: script.scriptHash,\n        operation: script.operation,\n        args: parseScriptParams(script.args),\n      }),\n    };\n    // @ts-ignore. TODO:Let's check later.\n    const result = await Neon.doInvoke(config);\n    return {\n      txid:\n        result && result.response && result.response.txid\n          ? result.response.txid\n          : \"\",\n      node: rpcEndpoint,\n    };\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};\n\nconst getAccount = async () => {\n  return {\n    provider: \"LOCAL\",\n    address: \"\",\n  };\n};\n\nexport const Local = {\n  doInvoke,\n  getAccount,\n};\n","import o3dapi from \"o3-dapi-core\";\nimport o3dapiNeo from \"o3-dapi-neo\";\nimport { DoInvokeProps } from \"./index\";\no3dapi.initPlugins([o3dapiNeo]);\nconst doInvoke = async ({ script, networkFee, network }: DoInvokeProps) => {\n  try {\n    const invokeScript = {\n      scriptHash: script.scriptHash,\n      operation: script.operation,\n      args: script.args,\n      fee: networkFee,\n      network,\n    };\n    // @ts-ignore\n    // eslint-disable-next-line no-undef\n    const neoline = new NEOLine.Init();\n    const res = await neoline.invoke(invokeScript);\n    return {\n      txid: res.txid,\n      node: res.nodeUrl,\n    };\n  } catch (e) {\n    console.error(e);\n    throw Error(e.message);\n  }\n};\nconst getAccount = async () => {\n  try {\n    // @ts-ignore\n    // eslint-disable-next-line no-undef\n    const neoline = new NEOLine.Init();\n    const account = await neoline.getAccount();\n    const { address } = account;\n    return {\n      provider: \"LINE\",\n      address,\n    };\n  } catch (e) {\n    throw new Error(`${e.message}: ${e.description}`);\n  }\n};\n\nexport const LINE = {\n  doInvoke,\n  getAccount,\n};\n","import { LocalWallet } from \"./local-storage\";\nimport { Providers } from \"./providers\";\n\nexport const WalletAPI = {\n  localStorage: LocalWallet,\n  providers: Providers,\n};\n","import { O3 } from \"./o3\";\nimport { NOS } from \"./nos\";\nimport { Local } from \"./local\";\nimport { LINE } from \"./line\";\nimport { CurrentWalletProps, InvokeScript } from \"../../types\";\n\ninterface ProviderProps {\n  doInvoke: (\n    args: DoInvokeProps\n  ) => Promise<{\n    txid: string;\n    node?: string;\n  }>;\n  getAccount: () => Promise<CurrentWalletProps>;\n}\n\nexport interface DoInvokeProps {\n  wallet: CurrentWalletProps;\n  script: InvokeScript;\n  networkFee: string;\n  network: string;\n}\n\nexport const Providers: { [key: string]: ProviderProps } = {\n  O3,\n  NOS,\n  LINE,\n  LOCAL: Local,\n};\n","export const routes = [\n  {\n    label: \"Saved wallets\",\n    path: \"/saved-wallets\",\n    component: \"./scenes/saved-wallets\",\n  },\n  {\n    label: \"Passphrase\",\n    path: \"/import-nep2\",\n    component: \"./scenes/import-nep2\",\n  },\n  {\n    label: \"Wallet file\",\n    path: \"/import-file\",\n    component: \"./scenes/import-file\",\n  },\n  {\n    label: \"Private key\",\n    path: \"/privatekey\",\n    component: \"./scenes/import-privatekey\",\n  },\n  {\n    label: \"New wallet\",\n    path: \"/create\",\n    component: \"./scenes/create-wallet\",\n  },\n];\n","import React from \"react\";\n\ninterface DisplayErrorProps {\n  message: string;\n  onClose: () => void;\n}\n\nconst DisplayError = ({ message, onClose }: DisplayErrorProps) => {\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {message}\n    </div>\n  );\n};\n\nexport default DisplayError;\n","import React, { useState } from \"react\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\n\ninterface PasswordInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  onKeyDown: () => void;\n  isLoading?: boolean;\n}\n\nconst PasswordInput = ({\n  value,\n  onChange,\n  onKeyDown,\n  isLoading,\n}: PasswordInputProps) => {\n  const [showPassword, setVisible] = useState(false);\n  return (\n    <div className=\"control has-icons-right\">\n      <input\n        onKeyDown={e => {\n          if (e.keyCode === 13 && !isLoading) {\n            onKeyDown();\n          }\n        }}\n        className=\"input\"\n        type={showPassword ? \"text\" : \"password\"}\n        placeholder=\"Password\"\n        value={value}\n        onChange={e => {\n          onChange(e.target.value);\n        }}\n      />\n      <span\n        onClick={() => setVisible(!showPassword)}\n        className=\"icon is-right\"\n        style={{ pointerEvents: \"auto\", zIndex: 0 }}\n      >\n        {showPassword ? <FaEyeSlash /> : <FaEye />}\n      </span>\n    </div>\n  );\n};\n\nexport default PasswordInput;\n","import React, { Suspense } from \"react\";\nimport { MemoryRouter, Route } from \"react-router\";\nimport Nav from \"./components/nav\";\nimport { CurrentWalletProps } from \"../../../../../types\";\nimport { routes } from \"./routes\";\nimport { WalletAPI } from \"../../../../../api\";\n\nconst NEP2Wallet = (props: {\n  onConnected: (wallet: CurrentWalletProps) => void;\n  currentWallet?: CurrentWalletProps;\n}) => {\n  const savedWallets = WalletAPI.localStorage.getList();\n  return (\n    <MemoryRouter initialEntries={[routes[0].path]}>\n      <>\n        <Nav hasStoredWallets={savedWallets && savedWallets.length > 0} />\n        <div style={{ minHeight: \"300px\" }}>\n          {routes.map(route => {\n            return (\n              <Route\n                key={route.path}\n                path={route.path}\n                render={() => {\n                  const Content = React.lazy(() =>\n                    import(\"\" + route.component)\n                  );\n                  return (\n                    <Suspense fallback={<div />}>\n                      <Content savedWallets={savedWallets} {...props} />\n                    </Suspense>\n                  );\n                }}\n              />\n            );\n          })}\n        </div>\n      </>\n    </MemoryRouter>\n  );\n};\nexport default NEP2Wallet;\n","import React from \"react\";\nimport { NavLink, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { routes } from \"../../routes\";\n\ninterface MenuProps extends RouteComponentProps {\n  hasStoredWallets: boolean;\n}\n\nconst Menu = ({ hasStoredWallets, location }: MenuProps) => {\n  return (\n    <div className=\"tabs\">\n      <ul>\n        {routes.map(route => {\n          if (route.path === \"/saved-wallets\" && !hasStoredWallets)\n            return false;\n          return (\n            <li\n              className={location.pathname === route.path ? \"is-active\" : \"\"}\n              key={route.path}\n            >\n              <NavLink exact activeClassName=\"is-active\" to={`${route.path}`}>\n                {route.label}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default withRouter(Menu);\n","import React from \"react\";\nimport Neon from \"@cityofzion/neon-js\";\nimport { withFormik, FormikErrors } from \"formik\";\nimport Form from \"./components/form\";\nimport { CurrentWalletProps } from \"../../../../../../../types\";\n\nexport interface Nep2States {\n  encryptedKey: string;\n  address: string;\n  password: string;\n}\n\nconst UnlockNep2 = withFormik<\n  {\n    currentWallet: CurrentWalletProps;\n    onConnected: (wallet: CurrentWalletProps) => void;\n  },\n  Nep2States\n>({\n  mapPropsToValues: ({ currentWallet }) => {\n    return {\n      address:\n        currentWallet && currentWallet.address ? currentWallet.address : \"\",\n      encryptedKey:\n        currentWallet && currentWallet.encryptedKey\n          ? currentWallet.encryptedKey\n          : \"\",\n      password: \"\",\n    };\n  },\n  validate: (values: Nep2States) => {\n    let errors: FormikErrors<any> = {};\n    if (!values.encryptedKey) {\n      errors.encryptedKey = \"Required\";\n    }\n    if (!values.password) {\n      errors.password = \"Required\";\n    }\n    if (!Neon.is.encryptedKey(values.encryptedKey)) {\n      errors.encryptedKey = \"It is not valid encrypted key format\";\n    }\n    return errors;\n  },\n  handleSubmit: (values: Nep2States, { props, setSubmitting, setStatus }) => {\n    const account = Neon.create.account(values.encryptedKey);\n    account\n      .decrypt(values.password)\n      .then(account => {\n        setSubmitting(false);\n        props.onConnected({\n          provider: \"LOCAL\",\n          address: account.address,\n          privateKey: account.privateKey,\n          encryptedKey: account.encrypted,\n        });\n      })\n      .catch(e => {\n        setSubmitting(false);\n        setStatus({\n          error: e.message,\n        });\n      });\n  },\n})(Form);\n\nexport default UnlockNep2;\n","import React from \"react\";\nimport { Form as FormikForm, FormikProps } from \"formik\";\nimport { Nep2States } from \"../index\";\nimport PasswordInput from \"../../../components/password-input\";\nimport DisplayError from \"../../../components/display-error\";\n\nconst Form = (props: FormikProps<Nep2States>) => {\n  const {\n    touched,\n    errors,\n    isSubmitting,\n    values,\n    setFieldValue,\n    submitForm,\n    status,\n    setStatus,\n  } = props;\n  const { encryptedKey, password } = values;\n  const isValidSubmit = encryptedKey && password;\n  return (\n    <FormikForm>\n      <h5 className=\"title is-6\">Unlock your wallet</h5>\n      <p className=\"content is-small\" style={{ wordBreak: \"break-all\" }}>\n        <strong>Address</strong>\n        <br />\n        {values.address}\n        <br />\n        <strong>Encrypted key</strong>\n        <br /> {values.encryptedKey}\n      </p>\n      <hr />\n      <div className=\"field\">\n        <div className=\"label\">Password</div>\n        <PasswordInput\n          isLoading={isSubmitting}\n          onKeyDown={() => (isValidSubmit ? submitForm() : false)}\n          onChange={val => setFieldValue(\"password\", val)}\n          value={password}\n        />\n        {errors.password && touched.password && (\n          <div className=\"help is-danger\">{errors.password}</div>\n        )}\n      </div>\n      {status && status.error && (\n        <DisplayError\n          message={status.error}\n          onClose={() => setStatus(undefined)}\n        />\n      )}\n      <button\n        type=\"submit\"\n        disabled={!isValidSubmit}\n        className={`button is-primary ${isSubmitting ? \"is-loading\" : \"\"}`}\n      >\n        Open wallet\n      </button>\n    </FormikForm>\n  );\n};\n\nexport default Form;\n"],"sourceRoot":""}