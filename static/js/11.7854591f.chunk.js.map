{"version":3,"sources":["packages/wallet/scenes/wallet/components/wallets/nep2-wallet/scenes/saved-wallets/components/form.tsx"],"names":["Form","props","savedWallets","isSubmitting","values","setFieldValue","submitForm","status","setStatus","className","onBlur","e","target","value","map","item","address","key","encryptedKey","onKeyDown","password","onChange","val","error","message","onClose","undefined","disabled","type"],"mappings":"iIAAA,mDAiEeA,UA1DF,SACXC,GACI,IAEFC,EAOED,EAPFC,aACAC,EAMEF,EANFE,aACAC,EAKEH,EALFG,OACAC,EAIEJ,EAJFI,cACAC,EAGEL,EAHFK,WACAC,EAEEN,EAFFM,OACAC,EACEP,EADFO,UAEF,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,SACb,yBAAKA,UAAU,SAAf,iBACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,uBACb,4BAAQC,OAAQ,SAAAC,GAAC,OAAIN,EAAc,eAAgBM,EAAEC,OAAOC,SACzDX,EAAaY,KAAI,SAAAC,GAChB,SAAIA,IAAQA,EAAKC,UAEb,4BAAQC,IAAKF,EAAKC,QAASH,MAAOE,EAAKG,cACpCH,EAAKC,gBAUtB,yBAAKP,UAAU,SACb,yBAAKA,UAAU,SAAf,YACA,kBAAC,UAAD,CACEU,UAAWb,EACXO,MAAOT,EAAOgB,SACdC,SAAU,SAAAC,GAAG,OAAIjB,EAAc,WAAYiB,OAG9Cf,GAAUA,EAAOgB,OAChB,kBAAC,UAAD,CACEC,QAASjB,EAAOgB,MAChBE,QAAS,kBAAMjB,OAAUkB,MAG7B,4BACEC,UAAWvB,EAAOgB,SAClBQ,KAAK,SACLnB,UAAS,4BAAuBN,EAAe,aAAe,KAHhE","file":"static/js/11.7854591f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form as FormikForm, FormikProps } from \"formik\";\nimport { Nep2States } from \"../../import-nep2\";\nimport PasswordInput from \"../../../components/password-input\";\nimport DisplayError from \"../../../components/display-error\";\nimport { StoredWalletProps } from \"../../../../../../../../types\";\n\nconst Form = (\n  props: { savedWallets: StoredWalletProps[] } & FormikProps<Nep2States>\n) => {\n  const {\n    savedWallets,\n    isSubmitting,\n    values,\n    setFieldValue,\n    submitForm,\n    status,\n    setStatus,\n  } = props;\n  return (\n    <FormikForm>\n      <div className=\"field\">\n        <div className=\"label\">Saved wallets</div>\n        <div className=\"control\">\n          <div className=\"select is-fullwidth\">\n            <select onBlur={e => setFieldValue(\"encryptedKey\", e.target.value)}>\n              {savedWallets.map(item => {\n                if (item && item.address) {\n                  return (\n                    <option key={item.address} value={item.encryptedKey}>\n                      {item.address}\n                    </option>\n                  );\n                }\n                return false;\n              })}\n            </select>\n          </div>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"label\">Password</div>\n        <PasswordInput\n          onKeyDown={submitForm}\n          value={values.password}\n          onChange={val => setFieldValue(\"password\", val)}\n        />\n      </div>\n      {status && status.error && (\n        <DisplayError\n          message={status.error}\n          onClose={() => setStatus(undefined)}\n        />\n      )}\n      <button\n        disabled={!values.password}\n        type=\"submit\"\n        className={`button is-primary ${isSubmitting ? \"is-loading\" : \"\"}`}\n      >\n        Open\n      </button>\n    </FormikForm>\n  );\n};\n\nexport default Form;\n"],"sourceRoot":""}